# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018, Open Source Geospatial Foundation
# This file is distributed under the same license as the MapServer package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: MapServer-doc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2019-01-25 10:09+0100\n"
"PO-Revision-Date: 2019-01-25 09:23+0000\n"
"Last-Translator: jbo_ads\n"
"Language-Team: Ukrainian (http://www.transifex.com/mapserver/mapserver-doc/language/uk/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: uk\n"
"Plural-Forms: nplurals=4; plural=(n % 1 == 0 && n % 10 == 1 && n % 100 != 11 ? 0 : n % 1 == 0 && n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 12 || n % 100 > 14) ? 1 : n % 1 == 0 && (n % 10 ==0 || (n % 10 >=5 && n % 10 <=9) || (n % 100 >=11 && n % 100 <=14 )) ? 2: 3);\n"

#: ../../../en/mapcache/caches.txt:5
msgid "Cache Types"
msgstr ""

#: ../../../en/mapcache/caches.txt:7 ../../../en/mapcache/config.txt:7
#: ../../../en/mapcache/dimensions.txt:7
#: ../../../en/mapcache/featureinfo.txt:7 ../../../en/mapcache/formats.txt:7
#: ../../../en/mapcache/index.txt:7 ../../../en/mapcache/install.txt:7
#: ../../../en/mapcache/locks.txt:7 ../../../en/mapcache/proxying.txt:7
#: ../../../en/mapcache/seed.txt:7 ../../../en/mapcache/services.txt:7
#: ../../../en/mapcache/sources.txt:7
#: ../../../en/mapcache/tile_assembling.txt:7
msgid "Thomas Bonfort"
msgstr ""

#: ../../../en/mapcache/caches.txt:8 ../../../en/mapcache/config.txt:8
#: ../../../en/mapcache/dimensions.txt:8
#: ../../../en/mapcache/featureinfo.txt:8 ../../../en/mapcache/formats.txt:8
#: ../../../en/mapcache/index.txt:8 ../../../en/mapcache/install.txt:8
#: ../../../en/mapcache/locks.txt:8 ../../../en/mapcache/proxying.txt:8
#: ../../../en/mapcache/seed.txt:8 ../../../en/mapcache/services.txt:8
#: ../../../en/mapcache/sources.txt:8
#: ../../../en/mapcache/tile_assembling.txt:8
msgid "tbonfort at terriscope.fr"
msgstr ""

#: ../../../en/mapcache/caches.txt:10
msgid ""
"This document details the different cache backends that can be used to store"
" tiles."
msgstr ""

#: ../../../en/mapcache/caches.txt:15
msgid "Disk Caches"
msgstr ""

#: ../../../en/mapcache/caches.txt:17
msgid ""
"The disk based cache is the simplest cache to configure, and the one with "
"the the fastest access to existing tiles. It is ideal for small tile "
"repositories, but will often cause trouble for sites hosting millions of "
"tiles, as the number of files or directories may rapidly overcome the "
"capabilities of the underlying filesystem. Additionally, the block size "
"chosen for the filesystem must closely match the mean size of a stored tile:"
" ideally, any given tile should just fit inside a filesystem block, so as "
"not to waste storage space inside each block, and not have to use up "
"multiple blocks per tile."
msgstr ""

#: ../../../en/mapcache/caches.txt:26
msgid ""
"The location of the files/directories has to be readable and writable by the"
" user running the tile server."
msgstr ""

#: ../../../en/mapcache/caches.txt:30
msgid "Common Configuration"
msgstr ""

#: ../../../en/mapcache/caches.txt:32
msgid "Disk caches are added via"
msgstr ""

#: ../../../en/mapcache/caches.txt:42
msgid ""
"All caches except the \"template\" one support the <symlink_blank/> option "
"which (depending on platform availability) will detect tiles of uniform "
"color and create a symbolic link to a single uniform color tile instead of "
"storing the actual blank data in the tile's file."
msgstr ""

#: ../../../en/mapcache/caches.txt:47
msgid ""
"All caches support the <creation_retry> option, which specifies the number "
"of times MapCache should retry if it failed to create a tile's file or "
"symlink. The default is to fail immediately: You may want to set this to a "
"positive value if using a network mounted filesystem where transient errors "
"are common."
msgstr ""

#: ../../../en/mapcache/caches.txt:53
msgid "Default Structure"
msgstr ""

#: ../../../en/mapcache/caches.txt:55
msgid ""
"The default disk cache stores tiles in a structure nearly identical to the "
"file/directory hierarchy used by TileCache. The only change is that a top "
"level directory structure corresponding to the name of the grid and the "
"eventual value of the tileset's dimensions is added."
msgstr ""

#: ../../../en/mapcache/caches.txt:60
msgid ""
"This cache is capable of detecting blank (i.e. uniform color) tiles and "
"using a symbolic link to a single blank tile to gain disk space."
msgstr ""

#: ../../../en/mapcache/caches.txt:71
msgid ""
"The only two configuration keys are the root directory where the tiles will "
"be stored, and a key to activate the symbolic linking of blank tiles."
msgstr ""

#: ../../../en/mapcache/caches.txt:76
msgid "Arcgis Compatible Structure"
msgstr ""

#: ../../../en/mapcache/caches.txt:85
msgid ""
"This layout creates a tile structure compatible with an arcgis exploded "
"cache. Tiles will be stored in files that resemble "
"`/tmp/{tileset}/{grid}/{dimension}/L{z}/R{y}/C{x}.{ext}`"
msgstr ""

#: ../../../en/mapcache/caches.txt:90
msgid "Worldwind Compatible Structure"
msgstr ""

#: ../../../en/mapcache/caches.txt:99
msgid ""
"This layout creates a tile structure compatible with a worldwind cache. "
"Tiles will be stored in files that resemble "
"`/tmp/{tileset}/{grid}/{dimension}/{z}/{y}/{y}_{x}.ext`"
msgstr ""

#: ../../../en/mapcache/caches.txt:104
msgid "Template Structure"
msgstr ""

#: ../../../en/mapcache/caches.txt:106
msgid ""
"The template based disk cache allows you to create (or reuse an existing) "
"tile structure that you define in advance. The <template> parameter takes a "
"string argument where various template entries will be replaced at runtime "
"by the correct value for each tile to store."
msgstr ""

#: ../../../en/mapcache/caches.txt:142
msgid "Berkeley DB Caches"
msgstr ""

#: ../../../en/mapcache/caches.txt:144
msgid ""
"The Berkeley DB cache backend stores tiles in a key-value flat-file "
"database, and therefore does not have the disadvantages of disk caches with "
"regards to the number of files stored on the filesystem. As the image blobs "
"are stored contiguously, the block size chosen for the filesystem has no "
"influence on the storage capacity of the volume."
msgstr ""

#: ../../../en/mapcache/caches.txt:150
msgid ""
"Note that for a given bdb cache, only a single database file is created, "
"which will store the tiles of its associated tilesets (i.e. there is not a "
"database file created per tileset, grid, and/or dimension). If you need to "
"store different tilesets to different files, then use multiple dbd cache "
"entries. It is not possible to use multiple database files for tileset grids"
" or dimensions."
msgstr ""

#: ../../../en/mapcache/caches.txt:156
msgid ""
"The Berkeley DB based caches are a bit faster than the disk based caches "
"during reads, but may be a bit slower during concurrent writes if a high "
"number of threads all try to insert new tiles concurrently."
msgstr ""

#: ../../../en/mapcache/caches.txt:181
msgid "SQLite Caches"
msgstr ""

#: ../../../en/mapcache/caches.txt:183
msgid ""
"There are two different SQLite caches that vary by the database schema they "
"create and query. SQLite caches have the advantage that they store tiles as "
"blobs inside a single database file, and therefore do not have the "
"disadvantages of disk caches with regards to the number of files stored. As "
"the image blobs are stored contiguously, the block size chosen for the "
"filesystem has no influence on the storage capacity of the volume."
msgstr ""

#: ../../../en/mapcache/caches.txt:190
msgid ""
"The SQLite based caches are a bit slower than the disk based caches, and may"
" have write-locking issues at seed time if a high number of threads all try "
"to insert new tiles concurrently."
msgstr ""

#: ../../../en/mapcache/caches.txt:196
msgid "Default Schema"
msgstr ""

#: ../../../en/mapcache/caches.txt:198
msgid ""
"Tiles are stored in the configured SQLite file created by MapCache with"
msgstr ""

#: ../../../en/mapcache/caches.txt:221
msgid ""
"You may also add custom SQLite pragmas that will be executed when first "
"connecting to a SQLite db, e.g. to override some compiled-in SQLite defaults"
msgstr ""

#: ../../../en/mapcache/caches.txt:232
msgid "<pragma> entries will result in a call to"
msgstr ""

#: ../../../en/mapcache/caches.txt:240
msgid "Custom Schema"
msgstr ""

#: ../../../en/mapcache/caches.txt:242
msgid ""
"This cache can use any database schema: It is up to you to supply the SQL "
"that will be exectuted to select or insert a new tile."
msgstr ""

#: ../../../en/mapcache/caches.txt:245
msgid ""
"In order to use such functionality you should supply the SQL queries that "
"will be used against your custom schema. It is up to you to make sure your "
"queries are correct and will return the correct data for a given tileset, "
"dimension, grid, x, y and z."
msgstr ""

#: ../../../en/mapcache/caches.txt:264
msgid ""
"Note that for the <get> query that returns data for a given tile, the first "
"returned argument is considered to be the image blob, and the second "
"optional one a timestamp representing the creation timestamp for that tile."
msgstr ""

#: ../../../en/mapcache/caches.txt:269
msgid "Blank Tile Detection"
msgstr ""

#: ../../../en/mapcache/caches.txt:271
msgid ""
"MapCache's SQLite caches support the detection and storage of blank (i.e. "
"uniform color) tiles, and will store a quadruplet of the rgba color "
"component in the data blob instead of the compressed image data itself. That"
" quadruplet will be transformed on-the-fly to a 1-bit palleted PNG before "
"being returned to the client."
msgstr ""

#: ../../../en/mapcache/caches.txt:286
msgid ""
"SQLite files created with this option will only be fully understood by "
"MapCache as each tile blob may contain a #rgba quadruplet instead of the "
"expected PNG or JPEG data."
msgstr ""

#: ../../../en/mapcache/caches.txt:294
msgid "Using Multiple SQLite Database Files"
msgstr ""

#: ../../../en/mapcache/caches.txt:296
msgid ""
"You may want to split an SQLite cache into multiple files, for "
"organisational purposes, or to keep the size of each file to a reasonable "
"limit if caching large amounts of data."
msgstr ""

#: ../../../en/mapcache/caches.txt:300
msgid ""
"In order to do so you may use a template to determine which file should be "
"used for a given file:"
msgstr ""

#: ../../../en/mapcache/caches.txt:309
msgid ""
"You may also limit the x and y number of tiles to be stored inside a single "
"database file:"
msgstr ""

#: ../../../en/mapcache/caches.txt:320
msgid ""
"In this case you **should** include the {x}, {y} and {z} replacements in the"
" template determining the file to use. In the previous example, tile "
"(z,x,y)=(15,3024,1534) would be stored in a file named "
"/path/to/g/mytileset/15/3000-1000.sqlite3 and tile (5,2,8) would be stored "
"in a file named /path/to/g/mytileset/5/0-0.sqlite3"
msgstr ""

#: ../../../en/mapcache/caches.txt:326 ../../../en/mapcache/caches.txt:535
msgid ""
"The following template keys are available for operating on the given tile's "
"x,y, and z:"
msgstr ""

#: ../../../en/mapcache/caches.txt:329
msgid "`{z}` is replaced by the zoom level."
msgstr ""

#: ../../../en/mapcache/caches.txt:330
msgid ""
"`{x}` is replaced by the x value of the leftmost tile inside the SQLite file"
" containing the requested tile."
msgstr ""

#: ../../../en/mapcache/caches.txt:332
msgid "`{inv_x}` is replaced by the x value of the rightmost tile."
msgstr ""

#: ../../../en/mapcache/caches.txt:333
msgid "`{y}` is replaced by the y value of the bottommost tile."
msgstr ""

#: ../../../en/mapcache/caches.txt:334
msgid "`{inv_y}` is replaced by the y value of the topmost tile."
msgstr ""

#: ../../../en/mapcache/caches.txt:335
msgid ""
"`{div_x}` is replaced by the index of the SQLite file starting from the left"
" of the grid (i.e. `{div_x} = {x}/<xcount>`)."
msgstr ""

#: ../../../en/mapcache/caches.txt:337
msgid "`{inv_div_x}` same as {div_x} but starting from the right."
msgstr ""

#: ../../../en/mapcache/caches.txt:338
msgid ""
"`{div_y}` is replaced by the index of the SQLite file starting from the "
"bottom of the grid (i.e. `{div_y} = {y}/<ycount>`)."
msgstr ""

#: ../../../en/mapcache/caches.txt:340
msgid "`{inv_div_y}` same as `{div_y}` but starting from the top."
msgstr ""

#: ../../../en/mapcache/caches.txt:344
msgid ""
"{inv_x} and {inv_div_x} will probably be rarely used, whereas {inv_y} and "
"{inv_div_y} will find some usage by people who prefer to index their dbfiles"
" files from top to bottom rather than bottom to top."
msgstr ""

#: ../../../en/mapcache/caches.txt:348
msgid ""
"In some cases, it may be desirable to have a precise hand on the filename to"
" use for a given x,y,z tile lookup, e.g. to look for a file named "
"`Z03-R00003-C000009.sqlite3` instead of just `Z3-R3-C9.sqlite3`. The "
"<dbfile> entry supports formatting attributes, following the Unix printf "
"syntax ( c.f.: http://linux.die.net/man/3/printf ), by suffixing each "
"template key with \"_fmt\", e.g.:"
msgstr ""

#: ../../../en/mapcache/caches.txt:366 ../../../en/mapcache/caches.txt:577
msgid "If not specified, the default behavior is to use \"%d\" for formatting."
msgstr ""

#: ../../../en/mapcache/caches.txt:372
msgid "MBTiles Caches"
msgstr ""

#: ../../../en/mapcache/caches.txt:374
msgid ""
"This cache type is a shortcut to the previous custom schema SQLite cache, "
"with pre-populated SQL queries that correspond to the MBTiles specification."
msgstr ""

#: ../../../en/mapcache/caches.txt:377
msgid ""
"Although the default MBTiles schema is very simple, MapCache uses the same "
"multi- table schema found in most downloadable MBTiles files, notably to "
"enable storing blank (i.e. uniform) tiles without duplicating the encoded "
"image data (in the same way the disk cache supports tile symlinking)."
msgstr ""

#: ../../../en/mapcache/caches.txt:382
msgid "The MBTiles schema is created with:"
msgstr ""

#: ../../../en/mapcache/caches.txt:418
msgid ""
"Contrarily to the standard SQLite MapCache schema, the MBTiles db file only "
"supports a single tileset per cache. The behavior if multiple tilesets are "
"associated to the same MBTiles cache is undefined, and will definitely "
"produce incorrect results."
msgstr ""

#: ../../../en/mapcache/caches.txt:426 ../../../en/mapcache/seed.txt:78
msgid ""
"When working with multiple processes (-p switch) and SQLite cache backends, "
"some errors may appear under high concurrency when writing to the SQLite "
"database (error: SQL logic error or missing database (1)). Upgrading to "
"SQLite >= 3.7.15 seems to resolve this issue."
msgstr ""

#: ../../../en/mapcache/caches.txt:434
msgid "Memcache Caches"
msgstr ""

#: ../../../en/mapcache/caches.txt:436
msgid ""
"This cache type stores tiles to an external memcached server running on the "
"local machine or accessible on the network. This cache type has the "
"advantage that memcached takes care of expiring tiles, so the size of the "
"cache will never exceed what has been configured in the memcache instance."
msgstr ""

#: ../../../en/mapcache/caches.txt:441
msgid ""
"Memcache support requires a rather recent version of the apr-util library. "
"Note that under very high loads (usually only attainable on synthetic "
"benchmarks on localhost), the memcache implementation of apr-util may fail "
"and start dropping connections for some intervals of time before coming back"
" online afterwards."
msgstr ""

#: ../../../en/mapcache/caches.txt:446
msgid "You can add multiple <server> entries."
msgstr ""

#: ../../../en/mapcache/caches.txt:459
msgid ""
"Tiles stored in memcache backends are configured to expire in 1 day by "
"default. This can be overridden at the tileset level with the <auto_expire> "
"keyword."
msgstr ""

#: ../../../en/mapcache/caches.txt:463
msgid ""
"To limit the memory used by blank tiles inside the memcache instance, you "
"may enable blank tile detection, in which case a `#rgba` quadruplet will be "
"stored to the cache instead of the actual image data. MapCache will convert "
"that on-the-fly to a 1-bit palleted PNG image before returning it to the "
"client."
msgstr ""

#: ../../../en/mapcache/caches.txt:479
msgid "(Geo)TIFF Caches"
msgstr ""

#: ../../../en/mapcache/caches.txt:481
msgid ""
"TIFF caches are the most recent addition to the family of caches, and use "
"the internal tile structure of the TIFF specification to access tile data. "
"Tiles can be stored in JPEG only (TIFF does not support PNG tiles)."
msgstr ""

#: ../../../en/mapcache/caches.txt:485
msgid ""
"As a single TIFF file may contain many tiles, there is a drastic reduction "
"in the number of files that have to be stored on the filesystem, which "
"solves the major shortcomings of the disk cache. Another advantage is that "
"the same TIFF files can be used by programs or WMS servers that only "
"understand regular GIS raster formats, and be served up with high "
"performance for tile access."
msgstr ""

#: ../../../en/mapcache/caches.txt:491
msgid ""
"The TIFF cache should be considered read-only for the time being. Write "
"access is already possible but should be considered experimental as there "
"might be some file corruption issues, notably on network filesystems. Note "
"that until all the tiles in a given TIFF file have been seeded/created, the "
"TIFF file is said to be \"sparse\" in the sense that it is missing a number "
"of JPEG tiles. As such, most non-GDAL based programs will have problems "
"opening these incomplete files."
msgstr ""

#: ../../../en/mapcache/caches.txt:499
msgid ""
"Note that the TIFF tile structure must exactly match the structure of the "
"grid used by the tileset, and the TIFF file names must follow strict naming "
"rules."
msgstr ""

#: ../../../en/mapcache/caches.txt:504
msgid "Defining the TIFF File Sizes"
msgstr ""

#: ../../../en/mapcache/caches.txt:506
msgid ""
"The number of tiles stored in each of the horizontal and vertical directions"
" must be defined:"
msgstr ""

#: ../../../en/mapcache/caches.txt:509
msgid ""
"<xcount> the number of tiles stored along the x (horizontal) direction of "
"the TIFF file"
msgstr ""

#: ../../../en/mapcache/caches.txt:511
msgid ""
"<ycount> the number of tiles stored along the y (vertical) direction of the "
"TIFF file"
msgstr ""

#: ../../../en/mapcache/caches.txt:523
msgid "Setting Up the File Naming Convention"
msgstr ""

#: ../../../en/mapcache/caches.txt:525
msgid ""
"The <template> tag sets the template to use when looking up a TIFF file name"
" given the x,y,z of the requested tile"
msgstr ""

#: ../../../en/mapcache/caches.txt:538
msgid ""
"{x} is replaced by the x value of the leftmost tile inside the TIFF file "
"containing the requested tile."
msgstr ""

#: ../../../en/mapcache/caches.txt:540
msgid "{inv_x} is replaced by the x value of the rightmost tile."
msgstr ""

#: ../../../en/mapcache/caches.txt:541
msgid "{y} is replaced by the y value of the bottommost tile."
msgstr ""

#: ../../../en/mapcache/caches.txt:542
msgid "{inv_y} is replaced by the y value of the topmost tile."
msgstr ""

#: ../../../en/mapcache/caches.txt:543
msgid ""
"{div_x} is replaced by the index of the TIFF file starting from the left of "
"the grid (i.e. {div_x} = {x}/<xcount>)."
msgstr ""

#: ../../../en/mapcache/caches.txt:545
msgid "{inv_div_x} same as {div_x} but starting from the right."
msgstr ""

#: ../../../en/mapcache/caches.txt:546
msgid ""
"{div_y} is replaced by the index of the TIFF file starting from the bottom "
"of the grid (i.e. {div_y} = {y}/<ycount>)."
msgstr ""

#: ../../../en/mapcache/caches.txt:548
msgid "{inv_div_y} same as {div_y} but starting from the top."
msgstr ""

#: ../../../en/mapcache/caches.txt:552
msgid ""
"{inv_x} and {inv_div_x} will probably be rarely used, whereas {inv_y} and "
"{inv_div_y} will find some usage by people who prefer to index their TIFF "
"files from top to bottom rather than bottom to top."
msgstr ""

#: ../../../en/mapcache/caches.txt:557
msgid "Customizing the Template Keys"
msgstr ""

#: ../../../en/mapcache/caches.txt:559
msgid ""
"In some cases, it may be desirable to have a precise hand on the filename to"
" use for a given x,y,z tile lookup, e.g. to look for a file named "
"\"Z03-R00003-C000009.tif\" instead of just \"Z3-R3-C9.tif\". The <template> "
"entry supports formatting attributes, following the Unix printf syntax ( "
"c.f.: http://linux.die.net/man/3/printf ), by suffixing each template key "
"with \"_fmt\", e.g.:"
msgstr ""

#: ../../../en/mapcache/caches.txt:580
msgid "Setting JPEG Compression Options"
msgstr ""

#: ../../../en/mapcache/caches.txt:582
msgid ""
"An additional optional parameter defines which JPEG compression should be "
"applied to the tiles when saved into the TIFF file:"
msgstr ""

#: ../../../en/mapcache/caches.txt:585
msgid "<format> the name of the (JPEG) format to use"
msgstr ""

#: ../../../en/mapcache/caches.txt:587
msgid ":ref:`mapcache_jpeg_format`"
msgstr ""

#: ../../../en/mapcache/caches.txt:596
msgid ""
"In this example, assuming a grid using 256x256 tiles, the files that are "
"read to load the tiles are tiled TIFFs with JPEG compression, whose size are"
" 16384x16384. The number of files to store on disk is thus reduced 4096 "
"times compared to the basic disk cache."
msgstr ""

#: ../../../en/mapcache/caches.txt:602
msgid "Using a Specific Locker"
msgstr ""

#: ../../../en/mapcache/caches.txt:604
msgid ""
"MapCache needs to create a :ref:`lock <mapcache_locks>` when writing inside "
"a TIFF file to ensure that no two instances are updating the same file "
"concurrently. By default the global MapCache locker will be used; you can, "
"however, configure a different locking mechanism or behavior by configuring "
"it inside the TIFF cache itself."
msgstr ""

#: ../../../en/mapcache/caches.txt:610
msgid ":ref:`mapcache_locks`"
msgstr ""

#: ../../../en/mapcache/caches.txt:620
msgid "GeoTIFF Support"
msgstr ""

#: ../../../en/mapcache/caches.txt:622
msgid ""
"If compiled with GeoTIFF and write support, MapCache will add referencing "
"information to the TIFF files it creates, so that the TIFF files can be used"
" in any GeoTIFF-enabled software. Write support does not produce full "
"GeoTIFFs with the definition of the projection used, but only the pixel "
"scale and tie-points, i.e. what is usually found in .tfw files."
msgstr ""

#: ../../../en/mapcache/caches.txt:628
msgid ""
"For reference, here is the gdalinfo output on a TIFF file created by "
"MapCache when compiled with GeoTIFF support:"
msgstr ""

#: ../../../en/mapcache/caches.txt:655
msgid "REST Caches"
msgstr ""

#: ../../../en/mapcache/caches.txt:657
msgid ""
"The following cache types store and retrieve tiles through standard HTTP GET"
" and PUT operations, and can be used to store tiles in popular cloud storage"
" providers."
msgstr ""

#: ../../../en/mapcache/caches.txt:662
msgid "Pure REST Cache"
msgstr ""

#: ../../../en/mapcache/caches.txt:664
msgid ""
"This cache type can be used to store tiles to a WebDAV enabled server. You "
"must provide a template URL that should be used when accessing a tile with a"
" given x,y,z, etc..."
msgstr ""

#: ../../../en/mapcache/caches.txt:675
msgid "Specifying HTTP Headers"
msgstr ""

#: ../../../en/mapcache/caches.txt:677
msgid ""
"You can customize which headers get added to the HTTP request, either "
"globally for every HTTP request, or specifically for a given type of request"
" (i.e. when getting, setting or deleting a tile):"
msgstr ""

#: ../../../en/mapcache/caches.txt:714
msgid "Amazon S3 REST Caches"
msgstr ""

#: ../../../en/mapcache/caches.txt:716
msgid ""
"The REST cache has been specialized to enable access to Amazon S3, in order "
"to add the layer of authentication/authorization needed for that platform."
msgstr ""

#: ../../../en/mapcache/caches.txt:737
msgid ""
"The <id> <secret> and <region> tags are required and are obtained and "
"configured through your Amazon management console. You should read the "
"documentation as to what headers you want to be adding to your requests "
"depending on your use case (the supplied example hosts tiles on cheaper "
"storage, and allows them to be publicly accessible)."
msgstr ""

#: ../../../en/mapcache/caches.txt:747
msgid "Microsoft Azure REST Caches"
msgstr ""

#: ../../../en/mapcache/caches.txt:749
msgid ""
"The REST cache has been specialized to enable access to Azure storage, in "
"order to add the layer of authentication/authorization needed for that "
"platform."
msgstr ""

#: ../../../en/mapcache/caches.txt:764
msgid ""
"The <id> <secret> and <container> tags are required and are obtained and "
"configured through your management console. You should read the "
"documentation as to what headers you want to be adding to your requests "
"depending on your use case."
msgstr ""

#: ../../../en/mapcache/caches.txt:772
msgid "Google Cloud Storage REST Caches"
msgstr ""

#: ../../../en/mapcache/caches.txt:774
msgid ""
"The REST cache has been specialized to enable access to Google Cloud "
"Storage, in order to add the layer of authentication/authorization needed "
"for that platform."
msgstr ""

#: ../../../en/mapcache/caches.txt:790
msgid ""
"The <access> and <secret> tags are required and are obtained and configured "
"through your management console. You should read the documentation as to "
"what headers you want to be adding to your requests depending on your use "
"case. Note that support for Google Cloud Storage uses its Amazon "
"compatibility layer."
msgstr ""

#: ../../../en/mapcache/caches.txt:798
msgid "Meta Caches"
msgstr ""

#: ../../../en/mapcache/caches.txt:800
msgid ""
"These cache types do not store tiles themselves, but rather delegate the "
"storage of a tile to a number of child caches based on a set of rules or "
"behaviors. These caches are mostly useful for large MapCache deployments "
"across multiple instances, with shared cache backends (i.e. dedicated "
"memcache servers, and network mounted filer filesystems)."
msgstr ""

#: ../../../en/mapcache/caches.txt:810
msgid "Composite Caches"
msgstr ""

#: ../../../en/mapcache/caches.txt:812
msgid ""
"This cache uses different child caches depending on the tile's zoom level, "
"and can be used for example to store low zoom-level tiles to permanent "
"storage, and higher zoom-level tiles to a temporary (i.e. memcache) cache."
msgstr ""

#: ../../../en/mapcache/caches.txt:830
msgid ""
"For each tile, the caches are tested in the order in which they have been "
"defined in the configuration file, and the first one to satisfy the min/max "
"zoom and grids constraints is used. It's up to the user to make sure the "
"succession of min/max zoom values and grids makes sense, e.g.:"
msgstr ""

#: ../../../en/mapcache/caches.txt:847
msgid "Fallback Caches"
msgstr ""

#: ../../../en/mapcache/caches.txt:849
msgid ""
"These cache types will return tiles from the first configured subcache that "
"does not return an error. They can be used when one of the caches is prone "
"to error conditions (e.g. remote REST caches, memcache)"
msgstr ""

#: ../../../en/mapcache/caches.txt:861
msgid ""
"When writing a tile to such a cache, it will be written to all the child "
"caches."
msgstr ""

#: ../../../en/mapcache/caches.txt:867
msgid "Multitier Caches"
msgstr ""

#: ../../../en/mapcache/caches.txt:869
msgid ""
"These cache types can be used to combine fast/expensive caches with "
"slow/cheap ones."
msgstr ""

#: ../../../en/mapcache/caches.txt:878
msgid ""
"If a given tile isn't found in the first child cache, it will be read from "
"the second child cache **and** copied into the first child cache for "
"subsequent accesses. This cache type is meant to be used when the first "
"cache does automatic pruning of the least recently used tiles (i.e. a "
"memcache one)."
msgstr ""

#: ../../../en/mapcache/caches.txt:883
msgid ""
"When writing a tile to such a cache, it will be written to the last child."
msgstr ""

#: ../../../en/mapcache/caches.txt:886
msgid "Cache Combinations"
msgstr ""

#: ../../../en/mapcache/caches.txt:888
msgid ""
"All these meta caches can be combined together to fine tune the availability"
" and performance depending on storage costs, time to recreate missing tiles,"
" etc..."
msgstr ""

#: ../../../en/mapcache/caches.txt:908
msgid ""
"In the previous example, all tiles are primarily accessed from a memcache "
"instance, however the lower zoom level tiles are backed up to a permanent "
"SQLite cache which will be used to populate the fast memcache cache e.g. on "
"restarts."
msgstr ""

#: ../../../en/mapcache/caches.txt:915
msgid "Riak Caches"
msgstr ""

#: ../../../en/mapcache/caches.txt:917
msgid "requires https://github.com/trifork/riack"
msgstr ""

#: ../../../en/mapcache/config.txt:5
msgid "Configuration File"
msgstr ""

#: ../../../en/mapcache/config.txt:10
msgid ""
"The configuration file determines how mod-mapcache will serve incoming "
"requests. It is an XML file comprising a list of entries, as outlined here:"
msgstr ""

#: ../../../en/mapcache/config.txt:27
msgid ""
"The MapCache configuration file is only read when the Apache web server "
"starts and the MapCache module is loaded. If you modify this file you will "
"have to restart Apache for the changes to take effect."
msgstr ""

#: ../../../en/mapcache/config.txt:34
msgid "Source"
msgstr ""

#: ../../../en/mapcache/config.txt:36
msgid ""
"A source is a service mod-mapcache can query to obtain image data. This is "
"typically a WMS server accessible by a URL. (There are currently only WMS, "
"WMTS and mapfile as sources, though others may be added later if the need "
"arises, see :ref:`mapcache_sources`)."
msgstr ""

#: ../../../en/mapcache/config.txt:94
msgid ""
"The name and type attributes are straightforward: `type` is \"wms\", and "
"`name` is the key by which this source will be referenced; `<url>` is the "
"HTTP location where the service can be accessed; and `<wmsparams>` is a list"
" of parameters that will be added to the WMS request. You should probably at"
" the very least add the FORMAT and LAYERS parameters. By convention(?), WMS "
"parameters are uppercase, and you should respect this convention in your "
"configuration file."
msgstr ""

#: ../../../en/mapcache/config.txt:102
msgid ""
"This is where you can also override some default WMS parameters if needed. "
"By default, the parameters that will be used are: "
"`<REQUEST>GetMap</REQUEST>` `<SERVICE>WMS</SERVICE>` `<STYLES></STYLES>` "
"`<VERSION>1.1.0</VERSION>`"
msgstr ""

#: ../../../en/mapcache/config.txt:107
msgid "Cache"
msgstr ""

#: ../../../en/mapcache/config.txt:109
msgid "A cache is a location where received tiles will be stored."
msgstr ""

#: ../../../en/mapcache/config.txt:197
msgid "Format"
msgstr ""

#: ../../../en/mapcache/config.txt:199
msgid ""
"A format is an image format that will be used to return tile data to "
"clients, and to store tile data on disk."
msgstr ""

#: ../../../en/mapcache/config.txt:262
msgid "Grid"
msgstr ""

#: ../../../en/mapcache/config.txt:264
msgid ""
"A grid is the matrix that maps tiles onto an area, and consists of a spatial"
" reference, a geographic extent, resolutions, and tile sizes."
msgstr ""

#: ../../../en/mapcache/config.txt:268
msgid "Mandatory Configuration Options"
msgstr ""

#: ../../../en/mapcache/config.txt:270
msgid ""
"**<size>**: The width and height of an individual tile, in pixels. Must be "
"specified as positive integers separated by a space character. The most "
"common tile size is:"
msgstr ""

#: ../../../en/mapcache/config.txt:278
msgid ""
"**<extent>**: The geographical extent covered by the grid, in ground units "
"(e.g. meters, degrees, feet, etc.). Must be specified as 4 floating point "
"numbers separated by spaces, ordered as minx, miny, maxx, maxy."
msgstr ""

#: ../../../en/mapcache/config.txt:282
msgid ""
"MapCache expects all of its extents to be given in lonlat, and does the "
"translation to latlon at request time if needed."
msgstr ""

#: ../../../en/mapcache/config.txt:285
msgid ""
"The (minx,miny) point defines the origin of the grid, i.e. the pixel at the "
"bottom left of the bottom-left most tile is always placed on the (minx,miny)"
" geographical point."
msgstr ""

#: ../../../en/mapcache/config.txt:289
msgid ""
"The (maxx,maxy) point is used to determine how many tiles there are for each"
" zoom level."
msgstr ""

#: ../../../en/mapcache/config.txt:296
msgid ""
"**<srs>**: The projection of the grid, usually given by it EPSG identifier. "
"This value isn't used directly by MapCache to compute reprojections; it is "
"only used to look up which grid to use when receiving WMS requests."
msgstr ""

#: ../../../en/mapcache/config.txt:306
msgid ""
"This is the value that is passed on to the :ref:`source <mapcache_sources>` "
"when requesting a tile that is not already cached for the current grid. You "
"must make sure that the source that is queried is capable of returning image"
" data for this SRS."
msgstr ""

#: ../../../en/mapcache/config.txt:311
msgid ""
"**<units>**: The ground units used by the grid's projection. This entry is "
"not used directly by MapCache aside from calculating scales for the WMTS "
"capabilities document. Allowed values are:"
msgstr ""

#: ../../../en/mapcache/config.txt:315
msgid "**m**  : meters"
msgstr ""

#: ../../../en/mapcache/config.txt:316
msgid "**dd** : decimal degrees"
msgstr ""

#: ../../../en/mapcache/config.txt:317
msgid "**ft** : feet"
msgstr ""

#: ../../../en/mapcache/config.txt:323
msgid ""
"**<resolutions>**: This is a list of resolutions for each of the zoom levels"
" defined by the grid. This must be supplied as a list of positive floating "
"point values, separated by spaces and ordered from largest to smallest. The "
"largest value will correspond to the grid's zoom level 0. Resolutions are "
"expressed in \"units-per-pixel\", depending on the unit used by the grid "
"(e.g. resolutions are in meters per pixel for most grids used in "
"webmapping)."
msgstr ""

#: ../../../en/mapcache/config.txt:336
msgid "Optional Configuration Options"
msgstr ""

#: ../../../en/mapcache/config.txt:338
msgid ""
"**<srsalias>**: This tag can be specified multiple times, and allows the "
"user to add multiple SRS entries for a given grid. This is especially useful"
" if the EPSG id for a given projection has evolved over time, or to support "
"catalogs other than the EPSG one (which is the only catalog supported by the"
" WMS specification)."
msgstr ""

#: ../../../en/mapcache/config.txt:350
msgid "**<metadata>**:"
msgstr ""

#: ../../../en/mapcache/config.txt:352
msgid ""
"**<title>**: The name of the grid, in human readable form. Appears in the "
"capabilities documents."
msgstr ""

#: ../../../en/mapcache/config.txt:359
msgid ""
"**<WellKnownScaleSet>**: See the WMTS keyword. This will add a "
"WellKnownScaleSet entry to the WMTS capabilities document. It is up to the "
"user to make sure that the supplied resolutions for the grid actually match "
"the pre-defined WellKnownScaleSet."
msgstr ""

#: ../../../en/mapcache/config.txt:368
msgid ""
"**<origin>**: Specifies the origin of the grid. Valid values are `top-left`,"
" `bottom-left`, `top-right` and `bottom-right`."
msgstr ""

#: ../../../en/mapcache/config.txt:371
msgid ""
"If not used, the grid will have the bottom-left corner as reference point."
msgstr ""

#: ../../../en/mapcache/config.txt:379
msgid "Preconfigured Grids"
msgstr ""

#: ../../../en/mapcache/config.txt:381
msgid ""
"There are three predefined grids you can use without defining them in the "
"mapcache.xml file:"
msgstr ""

#: ../../../en/mapcache/config.txt:384
msgid ""
"The \"WGS84\" grid corresponds to a grid where the whole world is rendered "
"on two 256x256-pixel tiles at level 0 (i.e. the (-180,-90,180,90) extent "
"fits on a 512x256 image). It goes down to zoom level 17."
msgstr ""

#: ../../../en/mapcache/config.txt:402
msgid ""
"The \"g\" grid may be used to overlay tiles on top of GoogleMaps, and is the"
" default tiling scheme used in webmapping applications. This grid goes down "
"to zoom level 18. Level 0 is a single 256x256 tile. This grid's default SRS "
"is EPSG:900913, which is non-standard but in wider use than than its "
"official EPSG:3857 entry."
msgstr ""

#: ../../../en/mapcache/config.txt:423
msgid ""
"The \"GoogleMapsCompatible\" grid is nearly identical to the \"g\" grid, "
"except that its default SRS is EPSG:3857 instead of EPSG:900913."
msgstr ""

#: ../../../en/mapcache/config.txt:444
msgid "Tileset"
msgstr ""

#: ../../../en/mapcache/config.txt:446
msgid ""
"A tileset is the essential configuration item for mod-mapcache, and "
"corresponds to a set of tiles coming from a *source*, stored in a *cache*, "
"and returned to the client in a given *format*."
msgstr ""

#: ../../../en/mapcache/config.txt:667
msgid "Services"
msgstr ""

#: ../../../en/mapcache/config.txt:669
msgid ""
"Services are the type of request that mod-mapcache will respond to. You "
"should, of course, enable at least one."
msgstr ""

#: ../../../en/mapcache/config.txt:732
msgid "Ruleset"
msgstr ""

#: ../../../en/mapcache/config.txt:734
msgid ""
"A ruleset contains a set of rules to impose certain behaviour on zoom "
"levels. It is referenced from a grid element inside a tileset. See tileset "
"for more information."
msgstr ""

#: ../../../en/mapcache/config.txt:738
msgid "It is possible to define rules that:"
msgstr ""

#: ../../../en/mapcache/config.txt:740
msgid "Puts limits on the visible extent of zoom levels."
msgstr ""

#: ../../../en/mapcache/config.txt:793
msgid "Miscellaneous"
msgstr ""

#: ../../../en/mapcache/config.txt:847
msgid ""
"For specific information about locking, read :ref:`this <mapcache_locks>`."
msgstr ""

#: ../../../en/mapcache/coverage.txt:5
msgid "Coverage Analyzer"
msgstr ""

#: ../../../en/mapcache/coverage.txt:7 ../../../en/mapcache/dimensions.txt:11
msgid "Jerome Boue"
msgstr ""

#: ../../../en/mapcache/coverage.txt:10
msgid "NAME"
msgstr ""

#: ../../../en/mapcache/coverage.txt:12
msgid "**mapcache_detail** - Coverage analysis of MapCache SQLite Caches"
msgstr ""

#: ../../../en/mapcache/coverage.txt:15
msgid "SYNOPSIS"
msgstr ""

#: ../../../en/mapcache/coverage.txt:22
msgid "DESCRIPTION"
msgstr ""

#: ../../../en/mapcache/coverage.txt:24
msgid ""
"``mapcache_detail`` main use case is users wanting to use offline a portion "
"of a MapCache cache covering a given geographical region. For that purpose, "
"they need to identify relevant files from an existing cache, check whether "
"tiles are missing from these files (possibly seeding missing parts if "
"necessary), and extract these files to build a new cache of the requested "
"region."
msgstr ""

#: ../../../en/mapcache/coverage.txt:30
msgid ""
"``mapcache_detail``, helps users with some of these activities. It works "
"with SQLite caches where one single file may contains thousands of tiles. It"
" is able to:"
msgstr ""

#: ../../../en/mapcache/coverage.txt:34
msgid ""
"Determine which SQLite files from the cache are needed to cover a given "
"geographical region at a given zoom level range;"
msgstr ""

#: ../../../en/mapcache/coverage.txt:37
msgid ""
"Count how many tiles are needed to cover the region and how many are already"
" present in each file, giving a coverage ratio on file level, zoom level and"
" global level;"
msgstr ""

#: ../../../en/mapcache/coverage.txt:41
msgid ""
"Estimate data size of missing tiles, which need to be downloaded to entirely"
" cover the requested region, again on file level, zoom level and global "
"level."
msgstr ""

#: ../../../en/mapcache/coverage.txt:45
msgid ""
"``mapcache_detail`` is able to handle all kinds of SQLite caches that "
"MapCache itself handles, namely:"
msgstr ""

#: ../../../en/mapcache/coverage.txt:48
msgid ""
":ref:`Single SQLite caches <mapcache_cache_sqlite>`, where only one SQLite "
"database contains the whole cache;"
msgstr ""

#: ../../../en/mapcache/coverage.txt:51
msgid ""
":ref:`Multiple SQLite caches <mapcache_cache_multisqlite>`, where cache is "
"split into multiple SQLite databases according to a given template;"
msgstr ""

#: ../../../en/mapcache/coverage.txt:54
msgid ""
":ref:`Composite SQLite caches <mapcache_cache_composite>`, which are a "
"combination of single and multiple SQLite caches depending on zoom levels."
msgstr ""

#: ../../../en/mapcache/coverage.txt:57
msgid ""
"``mapcache_detail`` takes the form of an independent CLI executable using "
"MapCache library. It is proposed as a simple contribution to the MapCache "
"project under a ``contrib/mapcache_detail/`` folder, due to its specific "
"purpose (only SQLite caches are handled)."
msgstr ""

#: ../../../en/mapcache/coverage.txt:63
msgid "OPTIONS"
msgstr ""

#: ../../../en/mapcache/coverage.txt:65
msgid ""
"Some option have the same syntax and meaning as those of "
":ref:`mapcache_seeder utility <mapcache_seed>`."
msgstr ""

#: ../../../en/mapcache/coverage.txt:69
msgid "Miscellaneous options"
msgstr ""

#: ../../../en/mapcache/coverage.txt:72
msgid "**-h, --help**"
msgstr ""

#: ../../../en/mapcache/coverage.txt:72
msgid "Display help message and exit."
msgstr ""

#: ../../../en/mapcache/coverage.txt:77
msgid "**-o, --short-output**"
msgstr ""

#: ../../../en/mapcache/coverage.txt:75
msgid ""
"(Optional) If this option is present, only Existing SQLite files are "
"reported, missing SQLite files are still taken into account for level and "
"global coverage."
msgstr ""

#: ../../../en/mapcache/coverage.txt:80
msgid "Options for specifying the cache to analyze"
msgstr ""

#: ../../../en/mapcache/coverage.txt:84
msgid "**-c, --config**  *MapCache configuration file*"
msgstr ""

#: ../../../en/mapcache/coverage.txt:83
msgid ""
"(Required) Set MapCache configuration file in which cache to analyze is "
"specified."
msgstr ""

#: ../../../en/mapcache/coverage.txt:87
msgid "**-t, --tileset** *tileset name*"
msgstr ""

#: ../../../en/mapcache/coverage.txt:87
msgid "(Required) Set the tileset to analyze."
msgstr ""

#: ../../../en/mapcache/coverage.txt:90
msgid "**-g, --grid** *grid name*"
msgstr ""

#: ../../../en/mapcache/coverage.txt:90
msgid "(Required) Set the grid to analyze."
msgstr ""

#: ../../../en/mapcache/coverage.txt:94
msgid "**-D, --dimension** *DIMENSION_NAME=VALUE*"
msgstr ""

#: ../../../en/mapcache/coverage.txt:93
msgid ""
"(Optional) Set the value of a dimension. This option can be used multiple "
"times for multiple dimensions."
msgstr ""

#: ../../../en/mapcache/coverage.txt:98
msgid "**-q, --query** <value>"
msgstr ""

#: ../../../en/mapcache/coverage.txt:97
msgid ""
"(Optional) Set SQL query for counting tiles in a rectangle. Default value "
"works with default schema of SQLite caches."
msgstr ""

#: ../../../en/mapcache/coverage.txt:101
msgid "Options for specifying the region to cover"
msgstr ""

#: ../../../en/mapcache/coverage.txt:106
msgid "**-z, --zoom** *minzoom[,maxzoom]*"
msgstr ""

#: ../../../en/mapcache/coverage.txt:104
msgid ""
"(Optional) Set min and max zoom levels to analyze, separated by a comma, eg:"
" 12,15. If *maxzoom* is absent, only zoom level specified by *minzoom* is "
"analyzed. Default value is *0*."
msgstr ""

#: ../../../en/mapcache/coverage.txt:109
msgid "Rectangular region"
msgstr ""

#: ../../../en/mapcache/coverage.txt:113
msgid "**-e, --extent** *minx,miny,maxx,maxy*"
msgstr ""

#: ../../../en/mapcache/coverage.txt:112
msgid ""
"(Optional) Set the extent to analyze. Default value is the whole grid "
"extent. This option cannot be used with **--ogr-datasource** option."
msgstr ""

#: ../../../en/mapcache/coverage.txt:116
msgid "Polygonal region"
msgstr ""

#: ../../../en/mapcache/coverage.txt:122
msgid "**-d, --ogr-datasource** *OGR data source*"
msgstr ""

#: ../../../en/mapcache/coverage.txt:119
msgid ""
"(Optional) Set the OGR data source to get features from. Any `OGR Vector "
"Format`_ can be used. If absent, the region is specified using **--extent** "
"option, possibly its default value. This option cannot be used with "
"**–extent** option."
msgstr ""

#: ../../../en/mapcache/coverage.txt:127
msgid "**-l, --ogr-layer** *layer*"
msgstr ""

#: ../../../en/mapcache/coverage.txt:125
msgid ""
"(Optional) Select the layer inside OGR data source. This option works only "
"if **--ogr-datasource** has been specified. This option cannot be used with "
"**–ogr-sql** option."
msgstr ""

#: ../../../en/mapcache/coverage.txt:132
msgid "**-w, --ogr-where** *filter*"
msgstr ""

#: ../../../en/mapcache/coverage.txt:130
msgid ""
"(Optional) Set a filter to apply on OGR layer features. This option works "
"only if **--ogr-datasource** has been specified. This option cannot be used "
"with **–ogr-sql** option."
msgstr ""

#: ../../../en/mapcache/coverage.txt:137
msgid "**-s, --ogr-sql** *SQL query*"
msgstr ""

#: ../../../en/mapcache/coverage.txt:135
msgid ""
"(Optional) SQL query to filter inside OGR data source. This option works "
"only if **--ogr-datasource** has been specified. This option cannot be used "
"with –ogr-layer or –ogr-where."
msgstr ""

#: ../../../en/mapcache/coverage.txt:140
msgid "COUNTING TILES"
msgstr ""

#: ../../../en/mapcache/coverage.txt:142
msgid ""
"To illustrate the process, here is an example of a fictional grid. Tiles are"
" represented by the smallest squares on the grid. Larger squares of 25 tiles"
" each represent SQLite files. Small indices denotes tile coordinates whereas"
" large indices denote databases coordinates. Colored rectangle represents "
"requested region for cache extraction. Darker tiles represent tiles present "
"in cache."
msgstr ""

#: ../../../en/mapcache/coverage.txt:152
msgid ""
"Expressed in tiles, region coordinates *(xmin, ymin, xmax, ymax)* are (11, "
"7, 27, 20). Expressed in SQLite files, these coordinates are (2, 1, 5, 4). "
"All files whose coordinates are comprised between (2, 1) and (5, 4) included"
" shall be part of the cache extraction. All tiles whose coordinates are "
"comprised between (11, 7) and (27, 20) included shall be counted for the "
"region coverage."
msgstr ""

#: ../../../en/mapcache/coverage.txt:159
msgid ""
"Following table gives tile count and coverage ratio of requested region, "
"according to tool's process:"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "SQlite file"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "(2,1)"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "(2,2)"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "(2,3)"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "(2,4)"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "(3,1)"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "(3,2)"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "(3,3)"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "(3,4)"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "(4,1)"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "(4,2)"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "(4,3)"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "(4,4)"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "(5,1)"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "(5,2)"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "(5,3)"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "(5,4)"
msgstr ""

#: ../../../en/mapcache/coverage.txt:163
msgid "Total"
msgstr ""

#: ../../../en/mapcache/coverage.txt:165
msgid "Tiles present in cache and covering region"
msgstr ""

#: ../../../en/mapcache/coverage.txt:167 ../../../en/mapcache/coverage.txt:167
#: ../../../en/mapcache/coverage.txt:167 ../../../en/mapcache/coverage.txt:167
#: ../../../en/mapcache/coverage.txt:167 ../../../en/mapcache/coverage.txt:167
#: ../../../en/mapcache/coverage.txt:167 ../../../en/mapcache/coverage.txt:174
#: ../../../en/mapcache/coverage.txt:174 ../../../en/mapcache/coverage.txt:174
#: ../../../en/mapcache/coverage.txt:174 ../../../en/mapcache/coverage.txt:174
#: ../../../en/mapcache/coverage.txt:174 ../../../en/mapcache/coverage.txt:174
msgid "0"
msgstr ""

#: ../../../en/mapcache/coverage.txt:167 ../../../en/mapcache/coverage.txt:167
#: ../../../en/mapcache/coverage.txt:167 ../../../en/mapcache/coverage.txt:171
msgid "4"
msgstr ""

#: ../../../en/mapcache/coverage.txt:167 ../../../en/mapcache/coverage.txt:167
#: ../../../en/mapcache/coverage.txt:171
msgid "3"
msgstr ""

#: ../../../en/mapcache/coverage.txt:167 ../../../en/mapcache/coverage.txt:171
msgid "9"
msgstr ""

#: ../../../en/mapcache/coverage.txt:167
msgid "8"
msgstr ""

#: ../../../en/mapcache/coverage.txt:167
msgid "6"
msgstr ""

#: ../../../en/mapcache/coverage.txt:167
msgid "2"
msgstr ""

#: ../../../en/mapcache/coverage.txt:167
msgid "43"
msgstr ""

#: ../../../en/mapcache/coverage.txt:170
msgid "Tiles needed to fully cover region"
msgstr ""

#: ../../../en/mapcache/coverage.txt:171
msgid "12"
msgstr ""

#: ../../../en/mapcache/coverage.txt:171 ../../../en/mapcache/coverage.txt:171
msgid "20"
msgstr ""

#: ../../../en/mapcache/coverage.txt:171 ../../../en/mapcache/coverage.txt:171
#: ../../../en/mapcache/coverage.txt:171 ../../../en/mapcache/coverage.txt:171
msgid "15"
msgstr ""

#: ../../../en/mapcache/coverage.txt:171 ../../../en/mapcache/coverage.txt:171
#: ../../../en/mapcache/coverage.txt:171 ../../../en/mapcache/coverage.txt:171
msgid "25"
msgstr ""

#: ../../../en/mapcache/coverage.txt:171 ../../../en/mapcache/coverage.txt:171
msgid "5"
msgstr ""

#: ../../../en/mapcache/coverage.txt:171
msgid "238"
msgstr ""

#: ../../../en/mapcache/coverage.txt:174
msgid "Coverage"
msgstr ""

#: ../../../en/mapcache/coverage.txt:174
msgid "0.2"
msgstr ""

#: ../../../en/mapcache/coverage.txt:174
msgid "0.15"
msgstr ""

#: ../../../en/mapcache/coverage.txt:174 ../../../en/mapcache/coverage.txt:174
msgid "0.267"
msgstr ""

#: ../../../en/mapcache/coverage.txt:174
msgid "0.36"
msgstr ""

#: ../../../en/mapcache/coverage.txt:174
msgid "0.32"
msgstr ""

#: ../../../en/mapcache/coverage.txt:174
msgid "0.24"
msgstr ""

#: ../../../en/mapcache/coverage.txt:174
msgid "0.12"
msgstr ""

#: ../../../en/mapcache/coverage.txt:174
msgid "0.222"
msgstr ""

#: ../../../en/mapcache/coverage.txt:174
msgid "**0.181**"
msgstr ""

#: ../../../en/mapcache/coverage.txt:178
msgid "OUTPUT REPORT"
msgstr ""

#: ../../../en/mapcache/coverage.txt:180
msgid ""
"Tool's output, in JSON format,  provides user with SQLite file list to be "
"extracted from cache. Details are given on the number of tiles contributing "
"to region coverage. A synthesis is also given for each zoom level and at a "
"global level."
msgstr ""

#: ../../../en/mapcache/coverage.txt:185
msgid ""
"Following is a fictional example describing information present in tool's "
"output."
msgstr ""

#: ../../../en/mapcache/coverage.txt:273
msgid "EXAMPLES"
msgstr ""

#: ../../../en/mapcache/coverage.txt:275
msgid ""
"Analyze tile coverage of tileset *osm* with the *g* grid. Default extent is "
"the whole world and default zoom level is 0:"
msgstr ""

#: ../../../en/mapcache/coverage.txt:282
msgid ""
"Same as beforehand, with explicit zoom levels 9 to 12 and explicit extent "
"covering Switzerland:"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:5
msgid "Tileset Dimensions"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:9
msgid "Seth Girvin"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:10
msgid "sgirvin at compass.ie"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:12
msgid "2018/06/29"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:13
msgid "1.8"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:16
msgid "Introduction"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:18
msgid ""
"WMS layers in MapServer can support dimensions, see :ref:`WMS Dimension "
"<wms_dimension>` for details. MapCache also supports dimensions for "
"tilesets."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:21
msgid ""
"Storing separate tile caches for different dimensions has several practical "
"use cases such as creating caches for different spatial boundaries, "
"elevations, or time periods. It also provides a mechanism for dynamically "
"switching Mapfiles based on a dimension value."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:24
msgid "MapCache uses Dimensions to:"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:26
msgid ""
"create the directory structure of disk and SQLite caches, using the template"
" structure with ``{dim}`` replacement entry, see *Template Structure* in "
":ref:`mapcache_cache_disk` and *Using Multiple SQLite Database Files* in "
":ref:`mapcache_cache_sqlite`."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:31
msgid ""
"create the database structure of SQLite caches, using custom schema with "
"``:dim`` replacement entry, see *Custom Schema* in "
":ref:`mapcache_cache_sqlite`."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:35
msgid ""
"build requests to WMS sources: any dimensions specified for a tileset will "
"be forwarded on to their WMS source whenever a cache miss occurs."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:39
msgid "Enabling Dimension Support in MapCache"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:41
msgid ""
"Dimensions are enabled in the configuration file at the "
":ref:`mapcache_config_tileset` level. Each tileset may define its own "
"dimensions with a ``<dimensions>`` section which includes one or several "
"``<dimension>`` elements."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:47
msgid "Dimension Attributes"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:49
msgid "Several attributes are defined for the ``<dimension>`` element."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:51
msgid ""
"``name`` (required): The name by which the dimension is refered to in a WMS "
"request (minus the ``dim_`` prefix as specified in `WMS 1.1.1 "
"Specification`_)."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:55
msgid ""
"``default`` (required): The default value for the dimension if none is "
"explicitly provided in the WMS request."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:58
msgid ""
"``type`` (required): MapCache defines several ways for specifying a "
"dimension: ``values``, ``regex``, ``sqlite``, ``postgresql``, "
"``elasticsearch`` and ``time``. They are described in the following "
"sections."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:63
msgid ""
"``unit`` (optional): dimension unit. This information is used only in the "
"GetCapabilities response."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:67
msgid "Dimension Types"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:69
msgid ""
"Several types of dimensions are supported by MapCache: Values, Regex, "
"SQLite, PostgreSQL, ElasticSearch and Time. They can be classified into two "
"groups depending on how dimension values are defined:"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:73
msgid ""
"First level dimension types: Values and Regex. Dimensions values are "
"statically specified in the configuration file."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:76
msgid ""
"Second level dimensions types: SQLite, PostgreSQL, ElasticSearch and Time. "
"Dimensions values are stored in a dynamic backend (SQLite file, PostgreSQL "
"database or ElasticSearch index) so that an update in the dimension values "
"does not involve a server restart."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:82
msgid "First Level Dimensions"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:84
msgid "First level dimensions define values in the configuration file."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:87
msgid "Values Dimensions"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:89
msgid ""
"A Values type dimension lists all possible dimension values. The name of the"
" dimension is used as the key in a query string when accessing through a WMS"
" or WMTS service, for example ``&DIM1=foobarbaz``."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:92
msgid ""
"If a client does not provide the dimension as a key value pair the default "
"will be used (in this example ``foobar``)."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:117
msgid "Regex Dimensions"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:119
msgid ""
"An alternative to the hard-coded list of values is to use regular "
"expressions."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:121
msgid ""
"The following example creates a MAPFILE dimension, for using the same "
"MapCache tileset with different MapServer Mapfiles. The name of the Mapfiles"
" need not be known to MapCache, and can therefore be created even after "
"MapCache has been started."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:124
msgid ""
"When a user passes a ``MAPFILE=/path/to/mapfile``, the string "
"``/path/to/mapfile`` is validated against the supplied (PCRE) regular "
"expression. The one in this example allows a name composed of alphanumeric "
"characters separated by slashes (/) and finishing with \".map\" ( "
"[a-zA-Z0-9\\./]*\\.map$ ) , but will fail if there are two consecutive dots "
"(..) in the path, to prevent file-system traversal."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:136
msgid "Second Level Dimensions"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:138
msgid ""
"Second level dimensions store values in a dynamic back-end, a SQLite file, a"
" PostgreSQL database or an ElasticSearch index. This allows for adding new "
"dimension values without modifying MapCache configuration file, which "
"otherwise would need to restart the server."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:144
msgid "SQLite Dimensions"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:146
msgid ""
"In a SQLite dimension, dimension values are stored in a SQLite file. "
"Moreover, each value references a list of internal, or sub-dimension values "
"which are used to query cache."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:150
msgid ""
"For example, let's define a \"sensor\" dimension whose allowed values "
"represent various Earth observation spacecrafts. A WMS request with that "
"dimension may contain, e.g.: ``...&dim_sensor=spot&...`` In this example, "
"each sensor references several data along an internal \"product\" sub-"
"dimension. An example of the \"sensor\" dimension back-end contents is "
"represented in the following table:"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:158
msgid "Sensor dimension"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:158
msgid "Product sub-dimension"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:160
#: ../../../en/mapcache/dimensions.txt:161
msgid "spot"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:160
msgid "spot-img1"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:161
msgid "spot-img2"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:162
#: ../../../en/mapcache/dimensions.txt:163
#: ../../../en/mapcache/dimensions.txt:164
msgid "phr"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:162
msgid "phr-img1"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:163
msgid "phr-img2"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:164
msgid "phr-img3"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:167
msgid ""
"The WMS request occurs at the \"sensor\" dimension level. The cache query is"
" performed at the \"product\" sub-dimension level. In case of a cache miss, "
"the \"product\" sub-dimension values are used to query the data source."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:171
msgid ""
"Querying the back-end may then result in returning multiple sub-dimension "
"values, each of which referencing distinct tiles. Assembling these tiles is "
"described in `Tile Assembly Policies`_ section below."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:175
msgid "A SQLite dimension is configured by specifying three elements:"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:177
msgid "``<dbfile>``: Location of the SQLite file implementing the dimension"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:179
#: ../../../en/mapcache/dimensions.txt:229
msgid ""
"``<list_query>``: SQL query returning all sub-dimension values for the "
"dimension, e.g. **spot-img1**, **spot-img2**, **phr-img1**, **phr-img2** and"
"  **phr-img3** in the \"sensor\" dimension example."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:183
#: ../../../en/mapcache/dimensions.txt:233
msgid ""
"``<validate_query>``: SQL query returning the list of sub-dimension values "
"for a given dimension value, e.g. **spot-img1** and **spot-img2** for the "
"**spot** dimension value in the \"sensor\" dimension example."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:217
msgid "PostgreSQL Dimensions"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:219
msgid ""
"PostgreSQL dimensions are very similar to SQLite dimensions. In particular, "
"the sub-dimension feature described in the section above is also available "
"with PostgreSQL dimensions. They differ only in the back-end implementation "
"which is a PostgreSQL database, and in the way they are configured. A "
"PostgreSQL dimension is configured by specifying three elements:"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:225
msgid ""
"``<connection>``: Connection information of the PostgreSQL database "
"implementing the dimension, as expected by the `PQconnectdb()`_ function of "
"the libpq - C library."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:264
msgid "ElasticSearch Dimensions"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:266
msgid ""
"ElasticSearch dimensions are similar to SQLite or PostgreSQL dimensions. In "
"particular, the sub-dimension feature described in the section above is also"
" available with ElasticSearch dimensions. ElasticSearch main difference with"
" SQLite and PostgreSQL is its query language, Query-DSL, based on JSON "
"instead of SQL. Therefore, ``<list_query>`` and ``<validate_query>`` "
"elements shall contain queries expressed in that language. Inserting JSON "
"data in XML configuration may need to encapsulate it in a ``<![CDATA[ ... "
"]]>`` element."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:274
msgid ""
"In addition, the complex structure of ElasticSearch responses, also "
"expressed in JSON, raises the need for extraction instructions to get sub-"
"dimension values from query responses."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:278
msgid "For example, let’s assume that this ElasticSearch query:"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:287
msgid "returns this response:"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:308
msgid "The expected sub-dimension values are then:"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:314
msgid ""
"This list is obtained by extracting the ``aggregations`` item from the outer"
" dictionary, then ``distinct_product`` , then ``buckets``. Finally the "
"``key`` item is to be extracted from each dictionary of the ``bucket`` list."
" The extraction instructions take the form of a path-like list of keywords "
"to be used to extract sub-dimension values from JSON response provided by "
"ElasticSearch:"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:325
msgid ""
"This is specified in the MapCache configuration file by way of new XML "
"elements, namely  ``<list_response>`` and ``<validate_response>``, "
"containing extraction instructions respectively for ``<list_query>`` and "
"``<validate_query>`` queries."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:330
msgid "An ElasticSearch dimensions is defined by specifying five elements:"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:332
msgid ""
"``<http>``: Connection information of the ElasticSearch index implementing "
"the dimension. This element contains two sub-elements:"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:335
msgid "``<url>``: Search URL of the ElasticSearch index"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:336
msgid ""
"``<headers>``: HTTP headers needed to access the ElasticSearch index. It "
"must contain the tag: ``<Content-Type>application/json</Content-Type>``."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:340
msgid ""
"``<list_query>``: `Query DSL`_ query for getting all sub-dimension values "
"for the dimension. This query is expressed in JSON format and may need to be"
" escaped in a ``<![CDATA[ ... ]]>`` tag."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:344
msgid ""
"``<validate_query>``: `Query DSL`_ query for getting the list of sub-"
"dimension values for a given dimension value. This query is expressed in "
"JSON format and may need to be escaped in a ``<![CDATA[ ... ]]>`` tag."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:348
msgid ""
"``<list_response>``: List of successive keywords needed to extract actual "
"sub-dimension values from the raw ElasticSearch response to the "
"``<list_query>`` query."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:352
msgid ""
"``<validate_response>``: List of successive keywords needed to extract "
"actual sub-dimension values from the raw ElasticSearch response to the "
"``<validate_query>`` query."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:408
msgid "Time Dimensions"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:410
msgid ""
"MapCache supports WMTS and WMS requests that include a TIME parameter, for "
"both timestamps and time intervals.  See :ref:`MS RFC 96: Time Dimension "
"Support in MapCache Tilesets <rfc96>` initial proposal for further details."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:414
msgid ""
"Up to Mapcache 1.6.1, defining a Time dimension involves a SQLite back-end. "
"Two elements must be provided:"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:417
msgid ""
"``<dbfile>``: Location of the SQLite file implementing the time dimension"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:419
msgid ""
"``<query>``: SQL query returning the list of available timestamp values "
"within a given time interval. In that query, start time and end time are "
"represented by the respective placeholders ``:start_timestamp`` and "
"``:end_time_stamp``. Returned values shall be in ``yyyy-mm-ddThh:mm:ssZ`` "
"time format, as specified in `RFC 3339`_, but restricted to UTC."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:425
msgid ""
"From MapCache 1.8 on, dynamic back-ends for Time dimensions can be "
"PostgreSQL databases or ElasticSearch indices in addition to SQLite files. "
"Configuring a Time dimension with a specific back-end is made by setting a "
"``time=\"true\"`` attribute within a SQLite, PostgreSQL or ElasticSearch "
"dimension configuration."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:430
msgid ""
"Still, MapCache keeps an (almost) backward compatible configuration of Time "
"dimension with an implicit SQLite back-end. Example in the following section"
" highlights differences."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:434
msgid ""
"Time values in the dynamic back-end are expressed in Unix time, i.e. the "
"number of seconds that have elapsed since January 1, 1970 (midnight UTC)."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:437
msgid ""
"Querying the back-end with an interval may result in returning multiple "
"timestamp values, each of which referencing distinct tiles. Assembling these"
" tiles is described in `Tile Assembly Policies`_ section below."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:442
msgid "Configuring a Time Dimension using a default SQLite back-end"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:492
msgid "Up to MapCache 1.6.1"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:493
msgid "From MapCache 1.8 on"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:496
msgid "Configuring a Time dimension using an explicit back-end"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:599
msgid "Tile Assembly Policies"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:601
msgid ""
"When several time or sub-dimension values are returned from a dimension "
"back-end query, the resulting tile is an assembly of all simple tiles "
"matching each value. The way simple tiles are assembled is set with the "
"``<assembly_type>`` tag of the ``<dimensions>`` element. Currently only two "
"values are implemented in MapCache:"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:607
msgid ""
"``none``: No assembly is performed, the resulting tile is the first "
"retrieved simple tile. This is the default value."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:610
msgid ""
"``stack``: Every pixel of the resulting tile is filled with the first opaque"
" pixel found in all simple tiles in their retrieval order, e.g.:"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:0
msgid "Assembly type: ``stack``"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:621
msgid "Product #1"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:622
msgid "Product #2"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:623
msgid "``stack`` assembly of Products #1 & #2"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:625
msgid ""
"The resulting tile may or may not be cached depending on the value of the "
"``<store_assemblies>`` tag of the ``<dimensions>`` element. The two possible"
" values are ``true`` and ``false``. Default is ``true``."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:629
msgid ""
"The ``<subdimensions_read_only>`` tag of the ``<dimensions>`` element "
"indicates whether data source shall be queried in case of cache miss. The "
"two possible values are ``true`` and ``false``. Default is ``false``."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:643
msgid "Storing Dimensions"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:645
msgid ""
"When using a disk based cache tiles will be stored in a folder structure "
"similar to ``base/gridname/DIM1/value/xx/xx/xx/xx/xx/xx.png`` (where DIM1 is"
" the dimension value)."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:648
msgid ""
"The order of the ``<dimension>`` tags inside the ``<dimensions>`` tag  is "
"important as it is used to create the directory structure for the disk "
"cache. If you change the order of these values, any tiles that have been "
"previously cached are invalidated (they will be unavailable to MapCache but "
"not deleted)."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:652
msgid "Templates can be used to change the folder structure for example:"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:660
msgid "Templates can also be used to change Sqlite database names e.g."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:671
msgid "Accessing Tile Caches with Dimensions"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:673
msgid ""
"To retrieve a tile with a specific dimension, add the dimension name and "
"value to the request query string e.g. ``&DIM1=value``"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:675
msgid ""
"Only WMS and WMTS clients support passing dimensions to MapCache. Other tile"
" services such as gmaps (GoogleMaps), tms, and KML do not support "
"dimensions. WMTS however does allow access using a x,y,z addressing scheme, "
"so by using URL rewriting on the web server tile-based clients (for example "
"an OpenLayers ``ol.source.XYZ`` layer) can load a dimension-based tileset."
msgstr ""

#: ../../../en/mapcache/dimensions.txt:688
msgid "Seeding Tile Caches with Dimensions"
msgstr ""

#: ../../../en/mapcache/dimensions.txt:690
msgid ""
"The :ref:`MapCache seeding tool <mapcache_seed>` allows specific dimensions "
"to be seeded with the following syntax:"
msgstr ""

#: ../../../en/mapcache/featureinfo.txt:5
msgid "FeatureInfo Requests"
msgstr ""

#: ../../../en/mapcache/featureinfo.txt:10
#: ../../../en/mapcache/tile_assembling.txt:10
msgid "TBD"
msgstr ""

#: ../../../en/mapcache/formats.txt:5
msgid "Image Formats"
msgstr ""

#: ../../../en/mapcache/formats.txt:10
msgid ""
"MapCache allows you to configure how the image should be saved to a cache "
"once it has been requested from a source. The JPEG format should mostly be "
"used for raster imagery, whereas the PNG format is most useful for vector "
"based imagery where there are large uniform areas."
msgstr ""

#: ../../../en/mapcache/formats.txt:18
msgid "JPEG Format"
msgstr ""

#: ../../../en/mapcache/formats.txt:20
msgid ""
"The JPEG format saves tiles to JPEG. You can configure the JPEG compression "
"level (from 1 to 100) and the colorspace that should be used (RGB or YCbCr)"
msgstr ""

#: ../../../en/mapcache/formats.txt:30
msgid ""
"*quality*: This is the typical JPEG quality setting. Values under 50 produce"
" lighter images but with notable compression artifacts. 100 should be "
"avoided as it produces very heavy images."
msgstr ""

#: ../../../en/mapcache/formats.txt:33
msgid ""
"*photometric*: By default the YCbCr colorspace is used as it produces images"
" that tend to be 2 to 3 times lighter. Use RGB if you don't want the "
"default."
msgstr ""

#: ../../../en/mapcache/formats.txt:39
msgid "PNG Format"
msgstr ""

#: ../../../en/mapcache/formats.txt:41
msgid ""
"The PNG format creates PNG images, with optional quantization (reduction of "
"the number of colors to create an 8-bit palleted PNG)."
msgstr ""

#: ../../../en/mapcache/formats.txt:51
msgid ""
"*compression*: Choose which zlib compression to apply to the image data. "
"Recognized values are \"fast\" and \"best\". Omit the key to use the default"
" zlib compression."
msgstr ""

#: ../../../en/mapcache/formats.txt:54
msgid ""
"*colors*: Number of colors to use for quantization. Omit this key to produce"
" 24 or 32 bit RGB/RGBA PNGs, or set to a value between 2 and 256 to create "
"an 8-bit palleted PNG. The quantization step is destructive: There is no "
"guarantee that pixels will not have a noticeable shift in color in the case "
"when the tile contains many colors."
msgstr ""

#: ../../../en/mapcache/formats.txt:63
msgid "Mixed Format"
msgstr ""

#: ../../../en/mapcache/formats.txt:65
msgid ""
"There is a third special format which mixes JPEG and PNG compression "
"depending on the contents of the image. This format allows creation of "
"caches for raster imagery using JPEG compression (which is more efficient) "
"on zones with imagery data, and PNG compression (which supports "
"trasnparency) on zones with no imagery or on a boundary between imagery and "
"emptiness."
msgstr ""

#: ../../../en/mapcache/formats.txt:78
msgid ""
"*opaque*: The format to use when the image has only fully opaque pixels"
msgstr ""

#: ../../../en/mapcache/formats.txt:79
msgid ""
"*transparent*: The format to use when the image has some transparent or "
"semi-opaque pixels."
msgstr ""

#: ../../../en/mapcache/http.txt:5
msgid "HTTP Requests"
msgstr ""

#: ../../../en/mapcache/http.txt:8
msgid ""
"HTTP configuration blocks are used in multiple places in the MapCache "
"configuration."
msgstr ""

#: ../../../en/mapcache/http.txt:11
msgid "Specifying the URL"
msgstr ""

#: ../../../en/mapcache/http.txt:13
msgid ""
"The simplest HTTP configuration block requires a single `<url>` child "
"element:"
msgstr ""

#: ../../../en/mapcache/http.txt:22
msgid "Timeouts"
msgstr ""

#: ../../../en/mapcache/http.txt:24
msgid ""
"You may configure the timeouts after which an HTTP request is abandoned:"
msgstr ""

#: ../../../en/mapcache/http.txt:41
msgid "Headers"
msgstr ""

#: ../../../en/mapcache/http.txt:43
msgid ""
"You can insert custom headers in the request, or forward headers received "
"from the client request:"
msgstr ""

#: ../../../en/mapcache/index.txt:5
msgid "MapCache 1.6.1"
msgstr ""

#: ../../../en/mapcache/index.txt:10
msgid ""
"MapCache is a server that implements tile caching to speed up access to WMS "
"layers. The primary objectives are to be fast and easily deployable, while "
"offering the essential features (and more!) expected from a tile caching "
"solution."
msgstr ""

#: ../../../en/mapcache/index.txt:34
msgid ""
"`MapCache presentation slides at FOSS4G2011 "
"<http://www.slideshare.net/tbonfort/modgeocache-mapcache-a-fast-tiling-"
"solution-for-the-apache-web-server>`__"
msgstr ""

#: ../../../en/mapcache/index.txt:38
msgid "Features"
msgstr ""

#: ../../../en/mapcache/index.txt:40
msgid ""
"services WMS, WMTS, TMS, VirtualEarth/Bing and Google Maps requests: "
":ref:`mapcache_services`"
msgstr ""

#: ../../../en/mapcache/index.txt:42
msgid ""
"ability to respond to untiled WMS requests by merging tiles from the cache "
"or forwarding them to the WMS source: :ref:`mapcache_tile_assembling`"
msgstr ""

#: ../../../en/mapcache/index.txt:44
msgid ""
"responds to WMS/WMTS :ref:`GetFeatureInfo <mapcache_featureinfo>` requests "
"(forwarded to source service)"
msgstr ""

#: ../../../en/mapcache/index.txt:46
msgid ":ref:`KML <mapcache_kml>` superoverlay generation"
msgstr ""

#: ../../../en/mapcache/index.txt:47
msgid "data provided by WMS backends (GDAL supported sources planned)"
msgstr ""

#: ../../../en/mapcache/index.txt:48
msgid "cache types:"
msgstr ""

#: ../../../en/mapcache/index.txt:50
msgid ":ref:`Disk <mapcache_cache_disk>`"
msgstr ""

#: ../../../en/mapcache/index.txt:51
msgid ":ref:`SQLite <mapcache_cache_sqlite>`"
msgstr ""

#: ../../../en/mapcache/index.txt:52
msgid ":ref:`Memcached <mapcache_cache_memcache>`"
msgstr ""

#: ../../../en/mapcache/index.txt:53
msgid ":ref:`Tiled TIFFs <mapcache_cache_tiff>`"
msgstr ""

#: ../../../en/mapcache/index.txt:54
msgid ":ref:`REST (S3, Azure, Google) <mapcache_cache_rest>`"
msgstr ""

#: ../../../en/mapcache/index.txt:55
msgid ":ref:`Riak <mapcache_cache_riak>`"
msgstr ""

#: ../../../en/mapcache/index.txt:56
msgid ":ref:`Combined caches <mapcache_cache_meta>`"
msgstr ""

#: ../../../en/mapcache/index.txt:57
msgid ":ref:`Berkeley DB <mapcache_cache_bdb>`"
msgstr ""

#: ../../../en/mapcache/index.txt:59
msgid "configurable metatiling"
msgstr ""

#: ../../../en/mapcache/index.txt:60
msgid ""
"on-the-fly tile merging for combining multiple tiles into a single image"
msgstr ""

#: ../../../en/mapcache/index.txt:61
msgid ""
"image post-processing (recompression and quantization) when arriving from a "
"backend"
msgstr ""

#: ../../../en/mapcache/index.txt:63
msgid ""
"interprets and produces cache control headers: Last-Modified, If-Modified-"
"Since, Expires"
msgstr ""

#: ../../../en/mapcache/index.txt:65
msgid ""
"multithreaded :ref:`seeding utility <mapcache_seed>` that can seed specific "
"zoom levels or specific areas (e.g. seed levels 0 to 12 of all tiles "
"intersecting Colorado)"
msgstr ""

#: ../../../en/mapcache/index.txt:68
msgid "ability to add a custom watermark on stored tiles"
msgstr ""

#: ../../../en/mapcache/index.txt:69
msgid ""
"produces a CGI/FastCGI executable for use with webservers other than Apache"
msgstr ""

#: ../../../en/mapcache/index.txt:70
msgid "configurable symbolic linking of blank tiles to save disk space"
msgstr ""

#: ../../../en/mapcache/index.txt:71
msgid ""
"configurable error reporting: plain HTTP error code, textual message, or "
"empty (blank) image"
msgstr ""

#: ../../../en/mapcache/index.txt:73
msgid ""
"ability to specify vendor parameters or dimensions to be forwarded to the "
"WMS backend (and to build a cache that takes these parameters into account):"
" :ref:`mapcache_dimensions`"
msgstr ""

#: ../../../en/mapcache/install.txt:5
msgid "Compilation & Installation"
msgstr ""

#: ../../../en/mapcache/install.txt:9
msgid "Alan Boudreault"
msgstr ""

#: ../../../en/mapcache/install.txt:10
msgid "aboudreaut at magears.com"
msgstr ""

#: ../../../en/mapcache/install.txt:11
msgid "Jeff McKenna"
msgstr ""

#: ../../../en/mapcache/install.txt:12
msgid "jmckenna at gatewaygeomatics.com"
msgstr ""

#: ../../../en/mapcache/install.txt:13 ../../../en/mapcache/seed.txt:9
msgid "Mathieu Coudert"
msgstr ""

#: ../../../en/mapcache/install.txt:14 ../../../en/mapcache/seed.txt:10
msgid "mathieu.coudert at gmail.com"
msgstr ""

#: ../../../en/mapcache/install.txt:15
msgid "2016-02-02"
msgstr ""

#: ../../../en/mapcache/install.txt:0
msgid "Table of Contents"
msgstr ""

#: ../../../en/mapcache/install.txt:22
msgid "Getting the Source"
msgstr ""

#: ../../../en/mapcache/install.txt:24
msgid ""
"The MapCache project is located at https://github.com/mapserver/mapcache, "
"and can be checked out with either:"
msgstr ""

#: ../../../en/mapcache/install.txt:37
msgid "Linux Instructions"
msgstr ""

#: ../../../en/mapcache/install.txt:39
msgid ""
"These instructions target a Debian/Ubuntu setup, but should apply with few "
"modifications to any Linux installation."
msgstr ""

#: ../../../en/mapcache/install.txt:42
msgid ""
"MapCache requires a number of library headers in order to compile correctly:"
msgstr ""

#: ../../../en/mapcache/install.txt:44
msgid ""
"**apache / apr / apr-util / apx2**: these are included in the *apache2"
"-prefork-dev* or *apache2-threaded-dev* packages, depending on which Apache "
"MPM you are running. This package will pull in the necessary APR headers "
"that you would have to manually install if you are not buidling an Apache "
"module (*libaprutil1-dev* and *libapr1-dev*)"
msgstr ""

#: ../../../en/mapcache/install.txt:50
msgid "**png**: *libpng12-dev*"
msgstr ""

#: ../../../en/mapcache/install.txt:51
msgid "**jpeg**: *libjpeg62-dev*"
msgstr ""

#: ../../../en/mapcache/install.txt:52
msgid "**curl**: *libcurl4-gnutls-dev*"
msgstr ""

#: ../../../en/mapcache/install.txt:54
msgid "The following libraries are not required, but recommended:"
msgstr ""

#: ../../../en/mapcache/install.txt:56
msgid ""
"**pcre**: *libpcre3-dev*. This will give you more powerful regular "
"expression syntax when creating validation expressions for dimensions"
msgstr ""

#: ../../../en/mapcache/install.txt:58
msgid ""
"**pixman**: *libpixman-1-dev*. The pixel manipulation library is used for "
"scaling and alpha-compositing images. MapCache ships with some code to "
"perform these tasks, but Pixman is generally faster as it includes code "
"optimized for modern CPUs (SSE2, MMX, etc...)"
msgstr ""

#: ../../../en/mapcache/install.txt:63
msgid ""
"The following libraries are not required, but needed to enable additional "
"functionalities:"
msgstr ""

#: ../../../en/mapcache/install.txt:66
msgid ""
"**fcgi**: *libfcgi-dev*. Needed to build a FastCGI program if you don't want"
" to run MapCache as an Apache module"
msgstr ""

#: ../../../en/mapcache/install.txt:68
msgid ""
"**gdal / geos**: *libgdal1-dev* *libgeos-dev*. Needed to enable advanced "
"seeding options (for only seeding tiles that intersect a given geographical "
"feature)"
msgstr ""

#: ../../../en/mapcache/install.txt:70
msgid "**sqlite**: *libsqlite3-dev*. For enabling the SQLite backend storages"
msgstr ""

#: ../../../en/mapcache/install.txt:71
msgid "**tiff**: *libtiff4-dev*. For enabling the TIFF backend storages"
msgstr ""

#: ../../../en/mapcache/install.txt:72
msgid ""
"**berkeley db** *libdb4.8-dev* : For enabling the Berkeley DB backend "
"storages"
msgstr ""

#: ../../../en/mapcache/install.txt:76
msgid "MapCache now builds with CMake."
msgstr ""

#: ../../../en/mapcache/install.txt:78
msgid ""
"For Unix users installing all packages to the default locations, the "
"compilation process should continue with:"
msgstr ""

#: ../../../en/mapcache/install.txt:92
msgid "Apache Module Specific Instructions"
msgstr ""

#: ../../../en/mapcache/install.txt:94
msgid ""
"The make install above installs the Apache module, but if you specifically "
"need to install only the Apache module you can do the following:"
msgstr ""

#: ../../../en/mapcache/install.txt:102
msgid ""
"The installation script takes care of putting the built module in the Apache"
" module directory.  The process for activating a module is usually distro "
"specific, but can be resumed by the following snippet that should be present"
" in the Apache configuration file ( e.g. /usr/local/httpd/conf/httpd.conf or"
" /etc/apache2/sites-available/default ):"
msgstr ""

#: ../../../en/mapcache/install.txt:112
msgid ""
"Next, a MapCache configuration is mapped to the server URL with the "
"following snippet:"
msgstr ""

#: ../../../en/mapcache/install.txt:115
msgid "For Apache < 2.4:"
msgstr ""

#: ../../../en/mapcache/install.txt:127
msgid "For Apache >= 2.4:"
msgstr ""

#: ../../../en/mapcache/install.txt:138
msgid ""
"Before you restart, copy the example mapcache.xml file to the location "
"specified in your Apache configuration:"
msgstr ""

#: ../../../en/mapcache/install.txt:144
msgid ""
"Finally, restart Apache to take the modified configuration into account"
msgstr ""

#: ../../../en/mapcache/install.txt:150
msgid ""
"If you have not disabled the demo service, you should now have access to it "
"on http://myserver/mapcache/demo"
msgstr ""

#: ../../../en/mapcache/install.txt:154
msgid "nginx Specific Instructions"
msgstr ""

#: ../../../en/mapcache/install.txt:156
msgid ""
"Working with nginx is still somewhat experimental. The following workflow "
"has only been tested on the development version, i.e. nginx-1.1.x"
msgstr ""

#: ../../../en/mapcache/install.txt:160
msgid ""
"For nginx support you need to build MapCache's nginx module against the "
"nginx source. Download the nginx source code:"
msgstr ""

#: ../../../en/mapcache/install.txt:172
msgid ""
"Run the configure command with the flag  ``--add-module``. This flag must "
"point to MapCache's nginx child directory. Assuming that MapServer source "
"was cloned or un tarred into to ``/usr/local/src``, an example configure "
"command for nginx would look like this:"
msgstr ""

#: ../../../en/mapcache/install.txt:181
msgid "Then build nginx:"
msgstr ""

#: ../../../en/mapcache/install.txt:189
msgid ""
"Due to nginx's non-blocking architecture, the MapCache nginx module does not"
" perform any operations that may lead to a worker process being blocked by a"
" long computation (i.e.: requesting a (meta)tile to be rendered if not in "
"the cache, proxying a request to an upstream WMS server, or waiting for a "
"tile to be rendered by another worker): It will instead issue a 404 error. "
"This behavior is essential so as not to occupy all nginx worker threads, "
"thereby preventing it from responding to all other incoming requests. While "
"this isn't an issue for completely seeded tilesets, it implies that these "
"kinds of requests need to be proxied to another MapCache instance that does "
"not suffer from these starvation issues (i.e. either a FastCGI MapCache, or "
"an internal proxied Apache server). In this scenario, both the nginx "
"MapCache instance and the Apache/FastCGI MapCache instance should be running"
" with the same ``mapcache.xml`` configuration file."
msgstr ""

#: ../../../en/mapcache/install.txt:203
msgid ""
"MapCache supplies an ``nginx.conf`` in its nginx child directory. The conf "
"contains an example configuration to load MapCache. The most relevant part "
"of the configuration is the location directive that points the  "
"``^/mapcache`` URI to the ``mapcache.xml`` path. You will need to change "
"this path to point to your own ``mapcache.xml`` in the MapCache source."
msgstr ""

#: ../../../en/mapcache/install.txt:209
msgid ""
"The basic configuration without any proxying (which will return 404 errors "
"on unseeded tile requests) is:"
msgstr ""

#: ../../../en/mapcache/install.txt:219
msgid ""
"If proxying unseeded tile requests to a MapCache instance running on an "
"Apache server, we will proxy all 404 MapCache errors to a "
"``mapcache.apache.tld`` server listening on port 8080, configured to respond"
" to MapCache requests on the ``/mapcache`` location."
msgstr ""

#: ../../../en/mapcache/install.txt:236
msgid ""
"If using FastCGI instances of MapCache, spawned with e.g. spawn-fcgi or "
"supervisord on port 9001 (make sure to enable FastCGI when building "
"MapCache, and to set the MAPCACHE_CONFIG_FILE environment variable before "
"spawning):"
msgstr ""

#: ../../../en/mapcache/install.txt:260
msgid ""
"Copy the relevant sections of ``nginx.conf`` from MapCache's ``nginx`` "
"directory into nginx's conf file (in this case "
"``/usr/local/nginx/conf/nginx.conf``). You should now have access to the "
"demo at http://myserver/mapcache/demo"
msgstr ""

#: ../../../en/mapcache/install.txt:266
msgid "CGI/FastCGI Specific Instructions"
msgstr ""

#: ../../../en/mapcache/install.txt:268
msgid ""
"A binary CGI/FastCGI is located in the mapcache/ subfolder, and is named "
"\"mapcache\". Activating FastCGI for the MapCache program on your web server"
" is not part of these instructions; more details may be found on the "
":ref:`FastCGI <fastcgi>` page or on more general pages across the web."
msgstr ""

#: ../../../en/mapcache/install.txt:273
msgid ""
"The MapCache FastCGI program looks for its configuration file in the "
"environment variable called MAPCACHE_CONFIG_FILE, which must be set by the "
"web server before spawning the MapCache processes."
msgstr ""

#: ../../../en/mapcache/install.txt:277
msgid ":ref:`mapcache_config`"
msgstr ""

#: ../../../en/mapcache/install.txt:281
msgid "For Apache with mod_cgi:"
msgstr ""

#: ../../../en/mapcache/install.txt:288
msgid "For Apache with mod_fcgid:"
msgstr ""

#: ../../../en/mapcache/install.txt:294
msgid ""
"If you have not disabled the demo service, you should now have access to it "
"on http://myserver/fcgi-bin/mapcache/demo, assuming your fcgi processes are "
"accessed under the fcgi-bin alias."
msgstr ""

#: ../../../en/mapcache/install.txt:298
msgid ""
"With a working mod_fcgid Apache instance, the full httpd.conf snippet to "
"activate MapCache could be:"
msgstr ""

#: ../../../en/mapcache/install.txt:315
msgid ""
"The MapCache service would then be accessible at "
"http://myserver/map.fcgi[/demo]"
msgstr ""

#: ../../../en/mapcache/install.txt:319
msgid "Customizing the Build, Or If Something Went Wrong"
msgstr ""

#: ../../../en/mapcache/install.txt:321
msgid ""
"Depending on which packages are available in the default locations of your "
"system, the \"cmake ..\" step will most probably have failed with messages "
"indicating missing dependencies (by default, MapCache has *some* of those). "
"The error message that CMake prints out should give you a rather good idea "
"of what steps you should take next, depending on whether the failed "
"dependency is a feature you require in your build."
msgstr ""

#: ../../../en/mapcache/install.txt:327
msgid ""
"mod_mapcache requires Apache, libcurl, libjpeg and libpng development "
"headers. The CMake script will try to locate them in default system "
"locations, but these locations can be overridden or specified with -D "
"switches. For example, if you get a message such as 'Could NOT find APR ', "
"you can use a command such as (assuming that APR is at /usr/local/apr) :"
msgstr ""

#: ../../../en/mapcache/install.txt:337
msgid ""
"If you don't want e.g. fcgi, you can disable the dependency by re-running "
"CMake with -DWITH_DEPENDENCY=0, e.g."
msgstr ""

#: ../../../en/mapcache/install.txt:345
msgid "Options Supported By the MapCache CMake Builder"
msgstr ""

#: ../../../en/mapcache/install.txt:347
msgid ""
"Here is a list of supported options that can be enabled/disabled at build."
msgstr ""

#: ../../../en/mapcache/install.txt:367
msgid "**Pixman** (*recommended*, from 0.5 onwards)"
msgstr ""

#: ../../../en/mapcache/install.txt:373
msgid ""
"Pixman is a pixel manipulation library used to assemble image tiles when "
"responding to non-tiled WMS requests. Pixman support is recommended as it is"
" highly optimized and will take advantage of recent processor extensions "
"(MMX, SSE2, etc.) to speed up blending and resampling operations. If the "
"Pixman library is not found, MapCache will fall back to internal pixel "
"operations that are slower."
msgstr ""

#: ../../../en/mapcache/install.txt:381
msgid "**SQLite** (*optional*, from 0.5 onwards)"
msgstr ""

#: ../../../en/mapcache/install.txt:387
msgid ""
"SQLite is used to enable the SQLite and MBTiles cache backend. Version 3.5.0"
" or newer is required."
msgstr ""

#: ../../../en/mapcache/install.txt:391
msgid "**GDAL** (*optional*, from 0.4 onwards, also requires geos)"
msgstr ""

#: ../../../en/mapcache/install.txt:397
msgid ""
"GDAL (actually OGR) is used by the seeding utility to allow the seeding of "
"tiles only intersecting a given polygon, e.g. to preseed all the tiles of a "
"given country."
msgstr ""

#: ../../../en/mapcache/install.txt:401
msgid "**GEOS** (*optional*, from 0.5 onwards)"
msgstr ""

#: ../../../en/mapcache/install.txt:407
msgid ""
"Along with GDAL/OGR, GEOS is needed by the seeder to test for the "
"intersection of tiles with geographical features. A sufficiently recent "
"version of GEOS (with support for prepared geometries) is required (but not "
"enforced by the configure script, so you'll end up with compilation errors "
"if a too old GEOS version is used)."
msgstr ""

#: ../../../en/mapcache/install.txt:413
msgid "**PCRE** (*optional*)"
msgstr ""

#: ../../../en/mapcache/install.txt:419
msgid ""
"PCRE (Perl Compatible Regular Expressions) can be used instead of POSIX "
"regular expressions for validating WMS dimensions. They are more powerful "
"than POSIX REs (and might be slower). You don't need this if you aren't "
"planning on using WMS dimension support with regex validation, or if your "
"validation needs are covered by posix REs."
msgstr ""

#: ../../../en/mapcache/install.txt:425 ../../../en/mapcache/proxying.txt:88
#: ../../../en/mapcache/services.txt:182 ../../../en/mapcache/services.txt:215
msgid ":ref:`mapcache_dimensions`"
msgstr ""

#: ../../../en/mapcache/install.txt:427
msgid "**FastCGI Support** (*optional*)"
msgstr ""

#: ../../../en/mapcache/install.txt:433
msgid ""
"MapCache can run as a FastCGI executable. Note that the overhead of FastCGI "
"is non-negligible with respect to the throughput you may obtain with a "
"native Apache module. The FastCGI build is less tested, and may lag behind "
"the Apache module version on some minor details. YMMV."
msgstr ""

#: ../../../en/mapcache/install.txt:438
msgid "**TIFF read/write Cache Support** (*optional*)"
msgstr ""

#: ../../../en/mapcache/install.txt:440
msgid "Use TIFFs as a cache backend (READONLY) :"
msgstr ""

#: ../../../en/mapcache/install.txt:446
msgid ""
"TIFF write support (for creating new TIFF files and adding tiles to existing"
" TIFF files) is still experimental and disabled by default. There is a risk "
"of ending up with corrupt TIFF files if they are placed on a filesystem that"
" does not honor file locking, as in that case multiple processes might end "
"up writing to the same file. File locking across concurrent threads is also "
"problematic, although MapCache tries to detect this situation and apply "
"sufficient locking workarounds. To stay on the safe side, write support "
"should for now only be enabled on local filesystems, with a prefork MPM or "
"FastCGI MapCache install."
msgstr ""

#: ../../../en/mapcache/install.txt:459
msgid ""
"When writing TIFF files, MapCache can also optionally add georeferencing "
"information if compiled with libtiff support. GeoTiff writing does not "
"produce the full tags needed for defining which preojection the grid is in, "
"but will only produce those defining the pixel scale and the tiepoints (i.e."
" the equivalent information found in the accompanying .tfw files)."
msgstr ""

#: ../../../en/mapcache/install.txt:469
msgid ":ref:`mapcache_cache_tiff`"
msgstr ""

#: ../../../en/mapcache/install.txt:471
msgid "**Memcached Cache Support** (*optional*)"
msgstr ""

#: ../../../en/mapcache/install.txt:477
msgid ""
"The memcached cache backend is disabled by default. You can optionally "
"enable it as it does not depend on other external libraries (support is "
"obtained through apr-util)."
msgstr ""

#: ../../../en/mapcache/install.txt:480
msgid ":ref:`mapcache_cache_memcache`"
msgstr ""

#: ../../../en/mapcache/install.txt:482
msgid "**Apache Module Options**"
msgstr ""

#: ../../../en/mapcache/install.txt:484
msgid ""
"You can disable the Apache module building if you only plan on using the "
"FastCGI executable or the seeder."
msgstr ""

#: ../../../en/mapcache/install.txt:491
msgid ""
"MapCache adds itself to the version string reported by the Apache server. "
"This can be disabled with:"
msgstr ""

#: ../../../en/mapcache/install.txt:498
msgid "**Native MapServer Mode** (*experimental options*)"
msgstr ""

#: ../../../en/mapcache/install.txt:500
msgid ""
"MapCache is by default not linked to MapServer in any way, and communicates "
"through the WMS protocol only. For improved performance, it is possible to "
"directly use the MapServer C library and avoid an HTTP request and an image "
"compression/decompression. This integration is still experimental and should"
" be used cautiously."
msgstr ""

#: ../../../en/mapcache/install.txt:510
msgid ""
"This will use the libmapserver.so from MapServer's install directory. "
"MapServer itself should be compiled with thread-safety enabled, unless you "
"plan to use the prefork MPM or FastCGI, **and** you do not plan to use the "
"seeder. For thread safety on the MapServer side, you might want to have a "
"look at tickets #4041 and #4044."
msgstr ""

#: ../../../en/mapcache/install.txt:516
msgid "**Debug Mode** (*work in progress*)"
msgstr ""

#: ../../../en/mapcache/install.txt:519
msgid "Since the CMake migration, this has to be done."
msgstr ""

#: ../../../en/mapcache/install.txt:521
msgid ""
"It enables some extra tests inside the code, and prints out many more "
"debugging messages to the server logs. you should probably not enable this "
"unless you want to track down a problem happening inside MapCache."
msgstr ""

#: ../../../en/mapcache/install.txt:526
msgid "Windows Instructions"
msgstr ""

#: ../../../en/mapcache/install.txt:528
msgid ""
"The following instructions are outdated. Windows builds are now handled "
"identically to the Unix ones with CMake."
msgstr ""

#: ../../../en/mapcache/install.txt:531
msgid ""
"These instructions target a Windows 7 setup with an Apache httpd compiled "
"from source. The Apache MapCache module has been successfully built with "
"with Microsoft Visual Studio C++ versions 2003, 2008 and 2010."
msgstr ""

#: ../../../en/mapcache/install.txt:536
msgid "Dependencies"
msgstr ""

#: ../../../en/mapcache/install.txt:538
msgid "Required:"
msgstr ""

#: ../../../en/mapcache/install.txt:540
msgid "**Apache / APR / APR-UTIL**: included with Apache httpd installation"
msgstr ""

#: ../../../en/mapcache/install.txt:542
msgid ""
"These can be installed manually, or using the appropriate Windows SDK from: "
"http://www.gisinternals.com/sdk/"
msgstr ""

#: ../../../en/mapcache/install.txt:545
msgid "**PNG**"
msgstr ""

#: ../../../en/mapcache/install.txt:546
msgid "**JPEG**"
msgstr ""

#: ../../../en/mapcache/install.txt:547
msgid "**CURL**"
msgstr ""

#: ../../../en/mapcache/install.txt:549
msgid "Recommended:"
msgstr ""

#: ../../../en/mapcache/install.txt:551
msgid "**PCRE**: ftp://ftp.gnu.org/pub/gnu/regex/regex-0.12.tar.gz"
msgstr ""

#: ../../../en/mapcache/install.txt:553
msgid "Optional:"
msgstr ""

#: ../../../en/mapcache/install.txt:555
msgid ""
"**FCGI**: Needed to build a FastCGI program if you don't want to run "
"MapCache as an Apache module"
msgstr ""

#: ../../../en/mapcache/install.txt:557
msgid ""
"**GDAL / GEOS**: Needed to enable advanced seeding options (for only seeding"
" tiles that intersect a given geographical feature)"
msgstr ""

#: ../../../en/mapcache/install.txt:559
msgid "**SQLITE**: For enabling the SQLite backend storages"
msgstr ""

#: ../../../en/mapcache/install.txt:560
msgid "**TIFF**: For enabling the TIFF backend storages"
msgstr ""

#: ../../../en/mapcache/install.txt:563
msgid "Configure Your Makefile"
msgstr ""

#: ../../../en/mapcache/install.txt:565
msgid "Open nmake.opt and modify the paths to point to the various libraries."
msgstr ""

#: ../../../en/mapcache/install.txt:568
msgid "Compilation"
msgstr ""

#: ../../../en/mapcache/install.txt:574
msgid ""
"If successful, the resulting libraries and executables will be generated in "
"their associated directories:"
msgstr ""

#: ../../../en/mapcache/install.txt:578
msgid "apache/"
msgstr ""

#: ../../../en/mapcache/install.txt:578
msgid "Apache module (mod_mapcache.dll)"
msgstr ""

#: ../../../en/mapcache/install.txt:581
msgid "cgi/"
msgstr ""

#: ../../../en/mapcache/install.txt:581
msgid "FastCGI MapCache executable (mapcache.exe)"
msgstr ""

#: ../../../en/mapcache/install.txt:584
msgid "util/"
msgstr ""

#: ../../../en/mapcache/install.txt:584
msgid "MapCache utilities (mapcache_seed.exe)"
msgstr ""

#: ../../../en/mapcache/install.txt:587
msgid "Move the Module Into the Apache Directory"
msgstr ""

#: ../../../en/mapcache/install.txt:589
msgid ""
"Copy the *mod_mapcache.dll* file into one of your Apache subdirectories."
msgstr ""

#: ../../../en/mapcache/install.txt:592
msgid ""
"Although other modules are installed into */Apache/modules/*, you should "
"place mod_mapcache.dll wherever its required dll files (libcurl.dll, "
"zlib.dll, etc.) live, to avoid any loading issues later on."
msgstr ""

#: ../../../en/mapcache/install.txt:597
msgid "Configure Your Installed Apache"
msgstr ""

#: ../../../en/mapcache/install.txt:599
msgid "Modify your *httpd.conf* file to load the module:"
msgstr ""

#: ../../../en/mapcache/install.txt:605
msgid "Next, configure your MapCache directory with the following snippet:"
msgstr ""

#: ../../../en/mapcache/install.txt:618
msgid ""
"Configure your *mapcache.xml* file (see the :ref:`Configuration "
"<mapcache_config>` section for help)."
msgstr ""

#: ../../../en/mapcache/install.txt:622
msgid ""
"If you receive an error such as \"cache disk: host system does not support "
"file symbolic linking\" you should comment out the line \"<symlink_blank/>\""
" in your mapcache.xml file, such as the following:"
msgstr ""

#: ../../../en/mapcache/install.txt:632
msgid ""
"Finally, restart your Apache. You should see a message in Apache's error.log"
" with a message similar to:"
msgstr ""

#: ../../../en/mapcache/install.txt:640
msgid "Test Your MapCache Module"
msgstr ""

#: ../../../en/mapcache/install.txt:642
msgid ""
"In your web browser, visit the local MapCache demo page: "
"http://127.0.0.1/mapcache/demo/. You should see a clickable list of demo "
"links:"
msgstr ""

#: ../../../en/mapcache/install.txt:654
msgid ""
"Click on one of the demos (such as http://127.0.0.1/mapcache/demo/wmts). A "
"map viewer should load, similar to the image below."
msgstr ""

#: ../../../en/mapcache/install.txt:661
msgid ""
"Zoom in a few times. Your configured cache location should be generating "
"tiles (in this case inside D:/ms4w/tmp/ms_tmp/cache/)."
msgstr ""

#: ../../../en/mapcache/locks.txt:5
msgid "Locking Mechanisms"
msgstr ""

#: ../../../en/mapcache/locks.txt:10
msgid ""
"MapCache sometimes needs exclusive access to a given resource, and provides "
"some mechanisms to ensure that no more than one MapCache instance can "
"operate on that resource. This may happen when:"
msgstr ""

#: ../../../en/mapcache/locks.txt:14
msgid ""
"Sending a request to a source WMS server for a given metatile. Only a single"
" MapCache instance should be sending that request; other MapCache instances "
"processing a tile from that same metatile should wait for that request to "
"finish rather than sending the same exact request again (in order not to "
"overload the WMS server)."
msgstr ""

#: ../../../en/mapcache/locks.txt:20
msgid ""
"Writing a tile inside a TIFF cache. The TIFF library does not handle "
"concurrent writes, so MapCache must ensure that only a single instance is "
"accessing a given TIFF file for writing."
msgstr ""

#: ../../../en/mapcache/locks.txt:24
msgid "A locker is configured with:"
msgstr ""

#: ../../../en/mapcache/locks.txt:34
msgid ""
"When a MapCache instance cannot acquire a lock because it has already been "
"acquired by another instance, it will:"
msgstr ""

#: ../../../en/mapcache/locks.txt:37
msgid ""
"Check back every `<retry>` seconds to see if the lock has been released by "
"the other instance."
msgstr ""

#: ../../../en/mapcache/locks.txt:39
msgid ""
"Consider that after `<timeout>` seconds the other instance has failed, and "
"delete the lock before acquiring it itself."
msgstr ""

#: ../../../en/mapcache/locks.txt:43
msgid "Disk Locks"
msgstr ""

#: ../../../en/mapcache/locks.txt:45
msgid ""
"This locking mechanism places a file somewhere in the filesystem. The "
"filesystem can be a network share in order to synchronize multiple MapCache "
"instances."
msgstr ""

#: ../../../en/mapcache/locks.txt:54
msgid ""
"The configured directory should be read/write accessible by the MapCache "
"instance."
msgstr ""

#: ../../../en/mapcache/locks.txt:58
msgid "Memcache Locks"
msgstr ""

#: ../../../en/mapcache/locks.txt:60
msgid ""
"This locking mechanism uses a third-party memcache instance to keep track of"
" the locks."
msgstr ""

#: ../../../en/mapcache/locks.txt:77
msgid "Fallback Locks"
msgstr ""

#: ../../../en/mapcache/locks.txt:79
msgid ""
"This \"meta\" locker will fall back to its second configured locker if the "
"first one fails (typically used with a memcache instance if the memcache "
"instance goes down)."
msgstr ""

#: ../../../en/mapcache/proxying.txt:5
msgid "Proxying Unsupported Requests"
msgstr ""

#: ../../../en/mapcache/proxying.txt:12
msgid "This page is a work in progress."
msgstr ""

#: ../../../en/mapcache/proxying.txt:14
msgid ""
"MapCache has the ability to forward any incoming request that it cannot "
"natively respond to (either by returning a tile directly, by :ref:`merging "
"<mapcache_tile_assembling>` multiple tiles, etc.)."
msgstr ""

#: ../../../en/mapcache/proxying.txt:18
msgid ""
"This setup allows MapCache to be placed transparently in front of an "
"existing OGC-service supplying server to accelerate tiled or GetMap requests"
" for a selected number of :ref:`grids <mapcache_grids>`, while maintaining "
"service compatibility for, e.g., unsupported grids, WFS requests, ..."
msgstr ""

#: ../../../en/mapcache/proxying.txt:25
msgid ""
"The proxying of requests is configured inside the :ref:`WMS <mapcache_wms>` "
"MapCache service, which is semantically awkward."
msgstr ""

#: ../../../en/mapcache/proxying.txt:28
msgid ""
"The configuration for this behavior is activated by a succession of entries "
"inside the <forwarding_rule> element of the wms <service>. Rules are tested "
"for in the order in which they appear in the mapcache.xml configuration "
"file, and the first one that matches is used. If no rules are defined, or if"
" no rule matches the incoming request, an error is returned to the user."
msgstr ""

#: ../../../en/mapcache/proxying.txt:48
msgid ""
"A <forwarding_rule> consists of a set of matching rules and an <http> block "
"defining where the request should be forwarded to."
msgstr ""

#: ../../../en/mapcache/proxying.txt:52
msgid "Parameter Filtering"
msgstr ""

#: ../../../en/mapcache/proxying.txt:54
msgid ""
"The rules apply to the key-value pair parameters received in the incoming "
"request, and are added with the <param> keyword:"
msgstr ""

#: ../../../en/mapcache/proxying.txt:64
msgid ""
"The \"type\" attribute is the same as what is allowed for :ref:`dimensions "
"<mapcache_dimensions>`, i.e. allowed values are \"values\", \"regex\", and "
"\"intervals\". In the previous example, the rule would match any incoming "
"request having ...&SERVICE=WFS&... or ...&SERVICE=WCS&... in its request "
"parameters."
msgstr ""

#: ../../../en/mapcache/proxying.txt:78
msgid ""
"Multiple rules can be used if the filtering has to be done on multiple "
"parameters. In the previous example, the rule would match a WFS or WCS "
"request that concerns the \"somelayername\" layer only."
msgstr ""

#: ../../../en/mapcache/proxying.txt:82
msgid ""
"A <forwarding_rule> that has no <param> child will match any incoming "
"request that could not be serviced by MapCache directly from its cache, and "
"can be used to forward all unsupported request to a full OGC- compliant "
"server so that an un-cached response can be returned to the client."
msgstr ""

#: ../../../en/mapcache/proxying.txt:91
msgid "Proxy Destination"
msgstr ""

#: ../../../en/mapcache/proxying.txt:93
msgid ""
"Once a <forwarding_rule> matches, its <http> child will be used to proxy the"
" request to another server."
msgstr ""

#: ../../../en/mapcache/proxying.txt:105
msgid ":ref:`mapcache_http`"
msgstr ""

#: ../../../en/mapcache/seed.txt:5
msgid "Seeder"
msgstr ""

#: ../../../en/mapcache/seed.txt:15
msgid ""
"Mod-mapcache ships with an advanced seeding tool, whose main features are:"
msgstr ""

#: ../../../en/mapcache/seed.txt:13
msgid "configurable number of seeding threads, to speed up the rendering"
msgstr ""

#: ../../../en/mapcache/seed.txt:14
msgid "ability to reseed tiles older than a certain timestamp"
msgstr ""

#: ../../../en/mapcache/seed.txt:15
msgid "ability to seed tiles given a shapefile/OGR datasource"
msgstr ""

#: ../../../en/mapcache/seed.txt:18
msgid "Usage"
msgstr ""

#: ../../../en/mapcache/seed.txt:20
msgid ""
"The seeding utility is named mapcache_seed, and is located under your "
"install directory (default is /usr/local/bin)."
msgstr ""

#: ../../../en/mapcache/seed.txt:25
msgid "Commandline Options"
msgstr ""

#: ../../../en/mapcache/seed.txt:27
msgid ""
"Options are available in short and long versions (e.g. -c or --config)."
msgstr ""

#: ../../../en/mapcache/seed.txt:29
msgid ""
"**-c | --config [file]**: path to the mapcache.xml configuration file that "
"contains the tilesets that need to be seeded."
msgstr ""

#: ../../../en/mapcache/seed.txt:32
msgid ""
"**-D | --dimension \"DIMENSION=VALUE\"**: used to specify which dimension to"
" use if the tileset supports dimensions. Can be used multiple times to set "
"multiple dimensions, e.g. -D \"DIM1=VAL1\" -D \"DIM2=VAL2\"."
msgstr ""

#: ../../../en/mapcache/seed.txt:36
msgid ""
"**-e | --extent minx,miny,maxx,maxy**: bounding box of the area to seed."
msgstr ""

#: ../../../en/mapcache/seed.txt:38
msgid "**-f | --force**: force recreation of existing tiles."
msgstr ""

#: ../../../en/mapcache/seed.txt:40
msgid ""
"**-g | --grid [grid]**: name of the grid that must be seeded (the selected "
"tileset must reference the given grid)."
msgstr ""

#: ../../../en/mapcache/seed.txt:43
msgid "**-h | --help**: show help."
msgstr ""

#: ../../../en/mapcache/seed.txt:45
msgid ""
"**-i | --iteration-mode**: either \"*drill-down*\" or \"*level-by-level*\". "
"Default is to use drill-down for g, WGS84 and GoogleMapsCompatible grids, "
"and level-by-level for others. Use this flag to override."
msgstr ""

#: ../../../en/mapcache/seed.txt:49
msgid ""
"**-m | --mode**: the mode to use the seeder: \"*seed*\", \"*delete*\" or "
"\"*transfer*\". Default is seed (*mode: seed*)."
msgstr ""

#: ../../../en/mapcache/seed.txt:53
msgid "**-M | --metasize**: override metatile size while seeding, e.g. 8,8."
msgstr ""

#: ../../../en/mapcache/seed.txt:55
msgid ""
"**-n | --nthreads**: number of parallel threads that should be used to "
"request tiles from the WMS source. The default is 1, but can be set higher "
"if the WMS server can withstand parallel requests. (As a rule of thumb, the "
"value chosen here should never be much higher than the number of CPUs on the"
" WMS server.)"
msgstr ""

#: ../../../en/mapcache/seed.txt:60
msgid "This option is imcompatible with the **-p | --nprocesses** option."
msgstr ""

#: ../../../en/mapcache/seed.txt:63
msgid ""
"**-o | --older [timestamp|now]**: only seed tiles that are older than the "
"given value. The value can either be the string \"*now*\", or a date "
"formatted like year/month/day hour:minute, e.g. \"2011/01/31 20:45\"."
msgstr ""

#: ../../../en/mapcache/seed.txt:67
msgid "A full timestamp should be quoted."
msgstr ""

#: ../../../en/mapcache/seed.txt:69
msgid ""
"**-p | --nprocesses**: number of parallel processes that should be used to "
"request tiles from the WMS source."
msgstr ""

#: ../../../en/mapcache/seed.txt:74
msgid "This option is imcompatible with the **-n | --nthreads** option."
msgstr ""

#: ../../../en/mapcache/seed.txt:83
msgid ""
"**-q | --quiet**: don't print progress messages to the standard output."
msgstr ""

#: ../../../en/mapcache/seed.txt:85
msgid "**-t | --tileset [tileset]**: name of the tileset that must be seeded."
msgstr ""

#: ../../../en/mapcache/seed.txt:87
msgid "**-v | --verbose**: print verbose debugging info (if compiled in)."
msgstr ""

#: ../../../en/mapcache/seed.txt:89
msgid ""
"**-x | --transfer**: the tileset to transfer when seeder is run in transfer "
"mode."
msgstr ""

#: ../../../en/mapcache/seed.txt:92
msgid ""
"**-z | --zoom minzoom,maxzoom**: start and end zoom levels that must be "
"seeded."
msgstr ""

#: ../../../en/mapcache/seed.txt:96
msgid "Optional Commandline Options When Using OGR/GEOS"
msgstr ""

#: ../../../en/mapcache/seed.txt:98
msgid ""
"At compile time, if OGR and GEOS are found on the system, the seeder tool "
"will support additional options to seed only the tiles that cover an "
"arbitrary geographical area. *Important:* Note that, for the time being, the"
" OGR datasource should be in the same projection as the grid you are "
"seeding, as there is no automatic reprojection from the datasource "
"projection to the grid projection."
msgstr ""

#: ../../../en/mapcache/seed.txt:105
msgid ""
"**-d | --ogr-datasource [ogr_datasource]**: OGR connection to the spatial "
"source. Consult the OGR documentation for all that is supported. In the "
"simplest case (e.g. a Shapefile), this is just the full filename of the "
"shapefile."
msgstr ""

#: ../../../en/mapcache/seed.txt:109
msgid ""
"**-l | --ogr-layer [ogr_layer]**: for datasources that contain multiple "
"layers (e.g. PostGIS, with multiple tables), determines which layer will be "
"used."
msgstr ""

#: ../../../en/mapcache/seed.txt:112
msgid ""
"**-s | --ogr-sql [ogr_sql]**: OGR SQL expression that can be applied (see "
"`OGR SQL`_)."
msgstr ""

#: ../../../en/mapcache/seed.txt:114
msgid ""
"**-w | --ogr-where [ogr_where]**: SQL \"where\" expression to filter out "
"returned values. This would typically be used to select only the geometry of"
" a given country if the datasource contains all the world contours."
msgstr ""

#: ../../../en/mapcache/seed.txt:119
msgid "Important Note"
msgstr ""

#: ../../../en/mapcache/seed.txt:121
msgid ""
"The seeding utility must be run under the same user account as the user "
"running the webserver. This is required so the permissions on the tiles "
"created by the seeder are accessible by the webserver, and conversely so the"
" seeder has the rights to write files to directories created by the "
"webserver."
msgstr ""

#: ../../../en/mapcache/seed.txt:127
msgid "A sample seeding session goes like this:"
msgstr ""

#: ../../../en/mapcache/seed.txt:138
msgid "Examples"
msgstr ""

#: ../../../en/mapcache/seed.txt:140
msgid "Seed the \"osm\" tileset with the \"g\" (Google / Web Mercator) grid: ::"
msgstr ""

#: ../../../en/mapcache/seed.txt:145
msgid "Seed levels 0 through 12: ::"
msgstr ""

#: ../../../en/mapcache/seed.txt:150
msgid ""
"Given a shapefile that contains the world country contours, seed only the "
"areas that are covered by land (i.e. skip the oceans). Also, use 4 request "
"threads in parallel: ::"
msgstr ""

#: ../../../en/mapcache/seed.txt:157
msgid ""
"Same as beforehand, but only seed the USA (notice the quote usage, required "
"to create valid SQL with a single-quoted 'US': ::"
msgstr ""

#: ../../../en/mapcache/seed.txt:163
msgid ""
"Reseed levels 0 to 12 (this could also be done by deleting the cache for "
"levels 0 to 12 and doing a classic seed, but doing so this way does not slow"
" down access from web clients): ::"
msgstr ""

#: ../../../en/mapcache/services.txt:5
msgid "Supported Tile Services"
msgstr ""

#: ../../../en/mapcache/services.txt:9
msgid "Stephen Woodbridge"
msgstr ""

#: ../../../en/mapcache/services.txt:12
msgid ""
"MapCache has the ability to serve tiles using a variety of different request"
" protocols and tile-naming conventions. This document describes these. The "
"various services must be turned on in the mapcache.xml file for MapCache to "
"respond to these specific requests."
msgstr ""

#: ../../../en/mapcache/services.txt:17
msgid ""
"All services are available on the demo interface, from which you are highly "
"encouraged to copy/paste the JavaScript code to get started when creating "
"your own pages accessing the MapCache tiles."
msgstr ""

#: ../../../en/mapcache/services.txt:21
msgid ""
"The following notation is used on this page and refers to object names in "
"the mapcache.xml configuration file."
msgstr ""

#: ../../../en/mapcache/services.txt:24
msgid "<tileset_name> - name of a configured tileset"
msgstr ""

#: ../../../en/mapcache/services.txt:25
msgid "<grid_name> - name of explicitly or implicitly defined grid"
msgstr ""

#: ../../../en/mapcache/services.txt:26
msgid "<quadkey> - specific to the Virtual Earth tile service"
msgstr ""

#: ../../../en/mapcache/services.txt:27
msgid "<z> - zoom level in zxy naming scheme"
msgstr ""

#: ../../../en/mapcache/services.txt:28
msgid "<y> - row number in zxy naming scheme"
msgstr ""

#: ../../../en/mapcache/services.txt:29
msgid "<x> - column number in zxy naming scheme"
msgstr ""

#: ../../../en/mapcache/services.txt:34
msgid "TMS Service"
msgstr ""

#: ../../../en/mapcache/services.txt:36
msgid "The TMS service uses a z/x/y tile naming scheme where:"
msgstr ""

#: ../../../en/mapcache/services.txt:38 ../../../en/mapcache/services.txt:131
msgid "*z* is the zoom level"
msgstr ""

#: ../../../en/mapcache/services.txt:39 ../../../en/mapcache/services.txt:132
msgid "*x* is the column number"
msgstr ""

#: ../../../en/mapcache/services.txt:40 ../../../en/mapcache/services.txt:133
msgid "*y* is the row number"
msgstr ""

#: ../../../en/mapcache/services.txt:42
msgid ""
"To activate the TMS service, add these lines to the mapcache.xml "
"configuration file:"
msgstr ""

#: ../../../en/mapcache/services.txt:49
msgid "A \"capabilities\" document can be fetched via:"
msgstr ""

#: ../../../en/mapcache/services.txt:55 ../../../en/mapcache/services.txt:148
#: ../../../en/mapcache/services.txt:380
msgid "Tiles are requested using this scheme:"
msgstr ""

#: ../../../en/mapcache/services.txt:62
msgid ""
"For EPSG:3857, EPSG:900913, or GoogleMapsCompatible grids, with cell = "
"[z/x/y]:"
msgstr ""

#: ../../../en/mapcache/services.txt:64 ../../../en/mapcache/services.txt:98
#: ../../../en/mapcache/services.txt:390
msgid "z0:"
msgstr ""

#: ../../../en/mapcache/services.txt:70 ../../../en/mapcache/services.txt:104
#: ../../../en/mapcache/services.txt:398 ../../../en/mapcache/services.txt:416
msgid "z1:"
msgstr ""

#: ../../../en/mapcache/services.txt:77 ../../../en/mapcache/services.txt:110
#: ../../../en/mapcache/services.txt:425
msgid "z2:"
msgstr ""

#: ../../../en/mapcache/services.txt:86
msgid "etc..."
msgstr ""

#: ../../../en/mapcache/services.txt:88
msgid "For EPSG:4326 or WGS84 grids:"
msgstr ""

#: ../../../en/mapcache/services.txt:92
msgid ""
"The OGC WMTS specification rather absurdly requires the GoogleCRS84Quad "
"WellKnownScaleset to have a level 0 whose extent is -180,-180,180,180. The "
"default \"WGS84\" MapCache grid honors this, which may cause some "
"incompatibilities with software that expects level 0 to be 2x1 tiles with "
"extent -180,-90,180,90"
msgstr ""

#: ../../../en/mapcache/services.txt:117
msgid "etc."
msgstr ""

#: ../../../en/mapcache/services.txt:122
msgid "KML Service"
msgstr ""

#: ../../../en/mapcache/services.txt:124
msgid ""
"The KML service produces `Super-Overlays "
"<http://code.google.com/apis/kml/documentation/kml_21tutorial.html#superoverlays>`__"
" for tilesets that are aligned to the WGS84 / EPSG:4326 grids. A Super-"
"Overlay is a KML file that links to an image URL, and to a set of other KML "
"URLs corresponding to neighboring resolutions. The KML service uses a z/x/y "
"tile naming scheme where:"
msgstr ""

#: ../../../en/mapcache/services.txt:137
msgid ""
"For the KML service to be functional, the TMS service must also be "
"activated, as the KML super-overlays link to images using this spec."
msgstr ""

#: ../../../en/mapcache/services.txt:140
msgid ""
"To activate the KML service, add these lines to the mapcache.xml "
"configuration file:"
msgstr ""

#: ../../../en/mapcache/services.txt:157
msgid "OGC WMTS Service"
msgstr ""

#: ../../../en/mapcache/services.txt:159
msgid ""
"To activate the WMTS service, add these lines to the mapcache.xml "
"configuration file:"
msgstr ""

#: ../../../en/mapcache/services.txt:166
msgid ""
"This service follows the standard OGC WMTS requests and supports both the "
"classical OGC-style key-value-pair encoded and REST-style requests."
msgstr ""

#: ../../../en/mapcache/services.txt:174
msgid "The capabilities are obtained through:"
msgstr ""

#: ../../../en/mapcache/services.txt:181 ../../../en/mapcache/services.txt:214
msgid ":ref:`mapcache_featureinfo`"
msgstr ""

#: ../../../en/mapcache/services.txt:188
msgid "OGC WMS Service"
msgstr ""

#: ../../../en/mapcache/services.txt:190
msgid ""
"MapCache responds to WMS version 1.1.1 requests, and has limited support for"
" version 1.3.0 ones."
msgstr ""

#: ../../../en/mapcache/services.txt:199
msgid ""
"Note that the WMS service is a little different than the other MapCache "
"services, as it listens on the root of the configured instance instead of on"
" an additional endpoint (i.e. the service replies on "
"http://server/mapcache/? and not on http://server/mapcache/wms?). This "
"behavior is required in order to enable :ref:`proxying of unsupported "
"requests <mapcache_proxying>` while offering a single endpoint for all OGC "
"services."
msgstr ""

#: ../../../en/mapcache/services.txt:207
msgid ""
"MapCache primarily supports version 1.1.1 WMS requests, but has limited "
"support for the newer version 1.3.0 ones. For 1.3.0 requests, MapCache will "
"determine which :ref:`grid <mapcache_grids>` to use by using the CRS= "
"parameter instead of the SRS= one, and will correctly honor axis ordering "
"for the EPSG reference systems that switch the usual x/y ordering of the "
"BBOX parameter."
msgstr ""

#: ../../../en/mapcache/services.txt:216
msgid ":ref:`mapcache_tile_assembling`"
msgstr ""

#: ../../../en/mapcache/services.txt:218
msgid "WMS requests follow the classical key-value-pair encoded style:"
msgstr ""

#: ../../../en/mapcache/services.txt:225
msgid "The capabilities document is returned by:"
msgstr ""

#: ../../../en/mapcache/services.txt:232
msgid "Optional WMS Configuration Options"
msgstr ""

#: ../../../en/mapcache/services.txt:236
msgid "Untiled GetMap Support"
msgstr ""

#: ../../../en/mapcache/services.txt:238
msgid ""
"Support for untiled (non WMS-C) GetMap requests can be enabled or disabled:"
msgstr ""

#: ../../../en/mapcache/services.txt:260
msgid "GetMap Image Format"
msgstr ""

#: ../../../en/mapcache/services.txt:262
msgid ""
"You may explicitly set which image format should be returned to the client "
"for an untiled WMS request (i.e. whenever the tile data cannot be served "
"directly from the caches but needs to go through a "
"decompression/recompression phase)."
msgstr ""

#: ../../../en/mapcache/services.txt:273
msgid ""
"If the `allow_client_override` attribute is set to true, then MapCache will "
"honor the `FORMAT=...` parameter sent by the client. By default MapCache "
"ignores this parameter and uses its configured image format."
msgstr ""

#: ../../../en/mapcache/services.txt:278
msgid "Image Resampling Quality"
msgstr ""

#: ../../../en/mapcache/services.txt:296
msgid "GoogleMaps XYZ Service"
msgstr ""

#: ../../../en/mapcache/services.txt:302
msgid ""
"Prerequisites: Your WMS should be capable of producing images in the "
"EPSG:900913 or EPSG:3857 SRS, i.e. it should reference the \"g\" or "
"\"GoogleMapsCompatible\" grid."
msgstr ""

#: ../../../en/mapcache/services.txt:306
msgid ""
"This is the minimal HTML page that should get you going. The important bits "
"are in the urlTemplate (for V2) and getTileURL (for V3) variables:"
msgstr ""

#: ../../../en/mapcache/services.txt:309
msgid "/mapcache is the Apache path where MapCache handles requests."
msgstr ""

#: ../../../en/mapcache/services.txt:310
msgid ""
"test@g is the tileset and grid name to use, joined by a '@' - the "
"{Z}/{X}/{Y} should be left alone."
msgstr ""

#: ../../../en/mapcache/services.txt:312
msgid ""
"The final extension should be changed to \"jpg\" if you are using a JPEG "
"format with your tileset."
msgstr ""

#: ../../../en/mapcache/services.txt:316
msgid "V2 API"
msgstr ""

#: ../../../en/mapcache/services.txt:354
msgid "V3 API"
msgstr ""

#: ../../../en/mapcache/services.txt:356
msgid ""
"The previous JavaScript for the V2 example should be slightly changed to:"
msgstr ""

#: ../../../en/mapcache/services.txt:374
msgid "Virtual Earth tile service"
msgstr ""

#: ../../../en/mapcache/services.txt:376
msgid ""
"Tiles are organized in one of two different layouts depending on whether "
"they are using a Spherical Mercator projection, like EPSG:3857 or "
"EPSG:900913, or if they are using a geographical projection, like EPSG:4326."
msgstr ""

#: ../../../en/mapcache/services.txt:387
msgid ""
"For EPSG:3857,  EPSG:900913, or GoogleMapsCompatible grids, <quadkey> are "
"arranged:"
msgstr ""

#: ../../../en/mapcache/services.txt:414
msgid "For EPSG:4326 or WGS84 grids, <quadkey> are arranged:"
msgstr ""

#: ../../../en/mapcache/sources.txt:5
msgid "Data Sources"
msgstr ""

#: ../../../en/mapcache/sources.txt:10
msgid ""
"MapCache uses the concept of a \"source\" as a service that is able to "
"return image data given a set of parameters (namely an extent, an image "
"size, and a projection). Typically, a source is the third-party WMS server "
"that you want to put a tile cache in front of."
msgstr ""

#: ../../../en/mapcache/sources.txt:19
msgid "WMS Sources"
msgstr ""

#: ../../../en/mapcache/sources.txt:21
msgid ""
"A WMS server is the main upstream server type used by MapCache. When "
"processing a given tile, if it is not found in its cache, MapCache will "
"query a WMS server with a GetMap request, split the returned image data into"
" individual tiles, and store those tiles in its cache for subsequent "
"requests."
msgstr ""

#: ../../../en/mapcache/sources.txt:41
msgid ""
":ref:`mapcache_http` to configure how the `<http>` block should be expressed"
msgstr ""

#: ../../../en/mapcache/sources.txt:43
msgid ""
"You should usually only supply vendor-specific parameters to the `<params>` "
"block.  **Never** include any hardcoded BBOX, WIDTH, HEIGHT, SRS or any "
"parameters related to dimensions inside this block, as these are calculated "
"by MapCache itself at runtime."
msgstr ""

#: ../../../en/mapcache/sources.txt:52
msgid "MapFile Sources"
msgstr ""

#: ../../../en/mapcache/sources.txt:54
msgid "Experimental"
msgstr ""

#: ../../../en/mapcache/sources.txt:57
msgid "WMTS Sources"
msgstr ""

#: ../../../en/mapcache/sources.txt:58
msgid ""
"MapCache WMTS source uses GDAL WMTS driver under the hood. Note that GDAL "
"version must be > 2.1 to be able to enable the driver correctly. GDAL WMTS "
"driver documentation can be found on: http://www.gdal.org/frmt_wmts.html"
msgstr ""

#: ../../../en/mapcache/sources.txt:60
msgid ""
"GDAL WMTS xml file is needed, example command to construct such a file "
"directly from wmts source equipped with basic auth & user/pass is: "
"gdal_translate \"WMTS:https://<url to capabilities>,layer=<layer id>\" "
"gdal_wmts.xml -of WMTS --config GDAL_HTTP_AUTH BASIC --config "
"GDAL_HTTP_USERPWD <user:pass>"
msgstr ""

#: ../../../en/mapcache/sources.txt:63
msgid ""
"After GDAL WMTS xml file is constructed, it's validity can be checked with "
"command \"gdalinfo <name of xml file>\"."
msgstr ""

#: ../../../en/mapcache/sources.txt:65
msgid ""
"last step is to enable the new WMTS source with following configuration in "
"mapcache.xml."
msgstr ""

#: ../../../en/mapcache/tile_assembling.txt:5
msgid "Tile Assembling"
msgstr ""
